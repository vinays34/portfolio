{"version":3,"sources":["assets/rnlogo.png","assets/vs.png","Constant/TextConstants.js","Components/Screens/Tools.js","UI/DataConstants.js","UI/Header.js","Components/AboutLeft.js","utils.js","UI/Home.js","Constant/CustomTabHeader.js","UI/Works.js","UI/Blogs.js","Blog/BlogHeader.js","UI/AboutContact.js","UI/ContactForm.js","Components/MainStack/Index.js","ApolloProvider/ApolloClient.js","Blog/Queries.js","Constant/utility.js","Blog/BlogIndex.js","Blog/BlogPost.js","App.js","assets/apollo.png","assets/strapi.png","assets/graphql.png","assets/blogicon.png","assets/pp.jpg","assets/fonts/Roboto-Regular.ttf"],"names":["module","exports","BLOGDATA","require","StyleSheet","create","container","flex","marginHorizontal","item","backgroundColor","margin","borderRadius","shadowColor","shadowOpacity","shadowRadius","padding","marginVertical","header","fontSize","fontFamily","title","NAV_BAR_DATA","id","name","MAIN_TOOLS","image","PROJECTS","url","desc","color","styles","buttonContainer","width","alignItems","selectionIndicator","borderColor","borderBottomWidth","replace","selectionIndicatorMobile","selectionText","fontWeight","elevation","Header","props","useState","hoverItem","setHoverItem","expandMenu","setExpandMenu","device","setDevice","windowWidth","useWindowDimensions","useEffect","renderNavItems","source","index","TouchableOpacity","onMouseEnter","onMouseLeave","style","selectedNavitem","onPress","setSelectedNavItem","key","Text","View","justifyContent","flexDirection","Image","height","map","paddingHorizontal","MaterialCommunityIcons","size","Divider","AboutLeft","tagLineDisplay","setTagLineDisplay","secondLine","setSecondline","fadeAnim","useRef","Animated","Value","current","maxWidth","alignSelf","strings","typeSpeed","showCursor","onComplete","anim","delay","timing","toValue","duration","start","opacity","Home","renderTools","CustomTabHeader","position","boxShadow","zIndex","Title","Works","selectedId","setSelectedId","FlatList","contentContainerStyle","horizontal","data","renderItem","window","open","LinearGradient","colors","textAlign","borderWidth","Blogs","resizeMode","Subheading","navigation","navigate","BlogHeader","AboutContact","useMediaQuery","carousel","ContactForm","setName","email","setEmail","setPhone","comment","setComment","submitButtobHover","setsubmitButtobHover","TextInput","onChangeText","placeholder","outline","paddingLeft","multiline","numberOfLines","textAlignVertical","length","axios","post","then","catch","Index","windowHeight","icon","containerItems","maxHeight","inputEl","scrollRef","bodyHeight","setBodyHeight","measure","fx","fy","px","py","scrollToIndex","parseInt","viewOffset","ref","showsVerticalScrollIndicator","onScroll","event","setTimeout","Math","round","nativeEvent","contentOffset","y","toString","ListFooterComponent","client","ApolloClient","uri","cache","InMemoryCache","typePolicies","Query","fields","vsBlogs","keyArgs","merge","existing","incoming","BLOG_QUERY_MAIN","gql","GET_SINGLE_BLOG","BlogIndex","React","visible","setVisible","blogname","setBlogname","limit","offset","setOffset","loadFooter","setLoadFooter","categories","setCategories","extraData","useQuery","variables","filter_word","category","fetchMore","error","loading","refetch","checkBoxValidation","val","indexOf","temp","splice","value","itemDimension","coverimage","Caption","vs_author","date","format","Date","created_at","ActivityIndicator","off_set","res","Modal","onDismiss","Checkbox","status","markdownStyles","heading1","link","mailTo","text","BlogPost","blog_id","route","params","ScrollView","contentInsetAdjustmentBehavior","vsBlog","Paragraph","upvotes","downvotes","Stack","createStackNavigator","App","linking","prefixes","config","screens","MainScreen","Tools","PrivacyPolicy","NotFound","state","routes","useFonts","ApolloProvider","NavigationContainer","fallback","Navigator","screenOptions","headerShown","Screen","component","options","navbar","navitem","navitemActive","navText","body"],"mappings":"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","file":"static/js/app.ffc018de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rnlogo.5c8c7839.png\";","module.exports = __webpack_public_path__ + \"static/media/vs.99288616.png\";","export const ABOUT = \"ABOUT\";\nexport const WORK = \"WORK\";\nexport const BLOG = \"BLOG\";\nexport const CONTACT = \"CONTACT\";\nexport const HOME = \"HOME\";\n\n//Data for works section\n\nexport const DATA = [\n  {\n    title:\"TAMBOLA PRO\",\n    url:\"https://play.google.com/store/apps/details?id=com.svinay.tambolanext\",\n    desc: \"An Indian bingo number caller.\"\n  },\n  {\n    title:\"LA CARTE - DIGITAL MENU\",\n    url:\"https://play.google.com/store/apps/details?id=com.lacarte.android\",\n    desc: \"Digital menu for restaurents.\"\n  },\n  {\n    title:\"COVID19 WEBSITE\",\n    url:\"https://www.worldcovid19.info\",\n    desc:\"Website displaying covid 19 related info.\"\n  }\n  \n];\nexport const DESC = [\n  \"An Indian bingo number caller.\",\n  \"Digital menu for restaurents.\",\n  \"Website displaying covid 19 related info.\",\n];\n\n//\nexport const BLOGDATA =\n  \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. \";\n\nexport const MAIN_TOOLS_DESC = [\n  \"App Framework\",\n  \"State Management\",\n  \"Query Language\",\n  \"Headless CMS\",\n];\n\n//0-frameworks\n//1-programming language\nexport const SKILLS_SET = [\n  {\n    title: \"FrameWorks\",\n    data: [\n      {\n        name: \"React Native\",\n        desc:\n          \"A javascript frontend framework for building native ios android and web apps\",\n        status: true,\n        type: \"0\",\n        imageurl: \"/rnlogo.png\",\n      },\n      {\n        name: \"Apollo Client\",\n        desc:\n          \"Apollo Client is a comprehensive state management library for JavaScript that enables you to manage both local and remote data with GraphQL.\",\n        status: true,\n        type: \"0\",\n        imageurl: \"/apollo.png\",\n      },\n      {\n        name: \"Graphql\",\n        desc:\n          \"GraphQL is a query language for your API, and a server-side runtime for executing queries by using a type system you define for your data.\",\n        status: true,\n        type: \"0\",\n        imageurl: \"graphql.png\",\n      },\n      {\n        name: \"Strapi\",\n        desc:\n          \"Strapi is a flexible, open-source Headless CMS proiding easy to build API's\",\n        status: true,\n        type: \"0\",\n        imageurl: \"strapi.png\",\n      },\n      {\n        name: \"Angular\",\n        desc:\n          \"Angular is a platform and framework for building single-page client applications using HTML and TypeScript.\",\n        status: false,\n        type: \"0\",\n        imageurl: \"/angular.png\",\n      },\n    ],\n  },\n  {\n    title: \"Programming Languages\",\n    data: [\n      {\n        name: \"Java\",\n        desc:\n          \"Java is a high-level programming language based on Object oriented programming\",\n        status: \"true\",\n        type: \"1\",\n        imageurl: \"/java.png\",\n      },\n      {\n        name: \"Javascript\",\n        desc:\n          \"JavaScript is a lightweight, interpreted, object-oriented language with first-class functions\",\n        status: \"true\",\n        type: \"0\",\n        imageurl: \"js.png\",\n      },\n    ],\n  },\n];\n\nexport const ALL_TOOLS = [\n  {\n    name: \"React Native\",\n    desc:\n      \"A javascript frontend framework for building native ios android and web apps\",\n    status: \"true\",\n    type: \"0\",\n    imageurl: require(\"./../assets/rnlogo.png\"),\n  },\n  {\n    name: \"Apollo Client\",\n    desc:\n      \"Apollo Client is a comprehensive state management library for JavaScript that enables you to manage both local and remote data with GraphQL.\",\n    status: \"true\",\n    type: \"0\",\n    imageurl: require(\"./../assets/rnlogo.png\"),\n  },\n  {\n    name: \"Graphql\",\n    desc:\n      \"GraphQL is a query language for your API, and a server-side runtime for executing queries by using a type system you define for your data.\",\n    status: \"true\",\n    type: \"0\",\n    imageurl: require(\"./../assets/rnlogo.png\"),\n  },\n  {\n    name: \"Strapi\",\n    desc:\n      \"Strapi is a flexible, open-source Headless CMS proiding easy to build API's\",\n    status: \"true\",\n    type: \"0\",\n    imageurl: require(\"./../assets/rnlogo.png\"),\n  },\n  {\n    name: \"Angular\",\n    desc:\n      \"Angular is a platform and framework for building single-page client applications using HTML and TypeScript.\",\n    status: \"false\",\n    type: \"0\",\n    imageurl: require(\"./../assets/rnlogo.png\"),\n  },\n  {\n    name: \"Java\",\n    desc:\n      \"Java is a high-level programming language based on Object oriented programming\",\n    status: \"true\",\n    type: \"1\",\n  },\n  {\n    name: \"Javascript\",\n    desc:\n      \"JavaScript is a lightweight, interpreted, object-oriented language with first-class functions\",\n    status: \"true\",\n    type: \"0\",\n  },\n];\n","import React,{useEffect,useRef,useState} from 'react';\nimport {View,Text, SectionList, StyleSheet, Image} from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\n\nimport Subheader from '../../Constant/Subheader';\nimport { ALL_TOOLS, SKILLS_SET } from '../../Constant/TextConstants';\n\nconst Tools =()=>{\n    const inputEl = useRef(null);\n    const [bodyHeight,setBodyHeight] = useState(0)\n \n    const renderItem=({item,index})=>{\n        return(\n            <View>\n                <Text>{item.name}</Text>\n            </View>\n        )\n    }\n    const Item = ({ title }) => (\n        <View style={[styles.item,{flexDirection:'row'}]}>\n           \n            <Image\n            source={title.imageurl}\n            style={{height:50,width:50,marginHorizontal:12}}\n            />\n         <View style={{flex:1}}>\n        <View style={{flexDirection:'row',alignItems:'center'}}>\n        <Text style={styles.title}>{title.name}</Text>\n       {title.status?(\n            <View style={{height:10,marginHorizontal:4,width:10,borderRadius:15,backgroundColor:'#4be02d'}}/>\n             \n            \n       ):null}\n        </View>\n          <Text>{title.desc}</Text>\n         </View>\n        </View>\n      );\n      useEffect(()=>{\n        if(inputEl.current){\n          inputEl.current.measure((fx, fy, width, height, px, py) => {\n            setBodyHeight(height-0.5)\n          });\n          \n        }\n      },[inputEl.current])\n    return(\n        <View style={{flex:1,backgroundColor:'white',alignItems:'center'}} ref={inputEl}>\n         <View style={{maxWidth:800,height:bodyHeight}}>\n         <SectionList\n         showsVerticalScrollIndicator={false}\n      sections={SKILLS_SET}\n      keyExtractor={(item, index) => item.name + index}\n      renderItem={({ item }) => <Item title={item} />}\n      renderSectionHeader={({ section: { title } }) => (\n          <Subheader name={title}/>\n       \n      )}\n    />\n         </View>\n        </View>\n    )\n}\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n     \n      marginHorizontal: 16\n    },\n    item: {\n      backgroundColor: \"white\",\n      margin:12,\n      borderRadius:12,\n      \n    shadowColor: 'black',\n    shadowOpacity:0.2,\n            shadowRadius:2,\n      padding: 20,\n      marginVertical: 8\n    },\n    header: {\n      fontSize: 28,\n      backgroundColor: \"#fff\",\n      fontFamily:\"Roboto\"\n    },\n    title: {\n      fontSize: 18\n    }\n  });\nexport default Tools;","export const NAV_BAR_DATA = [\n    {\n        id:\"0\",\n        name:\"Home\"\n    },\n    {\n        id:\"1\",\n        name:\"Work\"\n    },\n    {\n        id:\"2\",\n        name:\"Blog\"\n    },\n    {\n        id:\"3\",\n        name:\"About\"\n    },\n    {\n        id:\"4\",\n        name:\"Contact\"\n    },\n    {\n        id:\"5\",\n        name:\"Education\"\n    },\n] \n \nexport const MAIN_TOOLS = [\n    {\n        id:\"1\",\n        name:\"React Native\",\n        image: require(\"./../assets/rnlogo.png\")\n    },\n    {\n        id:\"2\",\n        name:\"Apollo Client\",\n        image: require(\"./../assets/apollo.png\")\n    },\n    {\n        id:\"3\",\n        name:\"Strapi\",\n        image: require(\"./../assets/strapi.png\")\n    },\n    {\n        id:\"4\",\n        name:\"Graphql\",\n        image: require(\"./../assets/graphql.png\")\n    }\n]\n\nexport const PROJECTS = [\n    {\n      title:\"TAMBOLA PRO\",\n      url:\"https://play.google.com/store/apps/details?id=com.svinay.tambolanext\",\n      desc: \"An Indian bingo number caller.\",\n      color:[\"#D8551E\",\"#C52907\"]\n    },\n    {\n      title:\"LA CARTE - DIGITAL MENU\",\n      url:\"https://play.google.com/store/apps/details?id=com.lacarte.android\",\n      desc: \"Digital menu for restaurents.\",\n      color:[\"#C62246\",\"#F55377\"]\n    },\n    {\n      title:\"COVID19 WEBSITE\",\n      url:\"https://vinaysandesh35.000webhostapp.com/\",\n      desc:\"Website displaying covid 19 related info.\",\n      color:[\"#37E8C8\",\"#07A78A\"]\n    }\n    \n  ];","import React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport {View,Text, Image, TouchableOpacity, StyleSheet, useWindowDimensions } from 'react-native';\nimport { Divider } from 'react-native-paper';\nimport { NAV_BAR_DATA } from './DataConstants';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nconst Header = (props)=>{\n    const [hoverItem,setHoverItem] = useState(\"\")\n    const [expandMenu,setExpandMenu] = useState(false)\n    const [device,setDevice] = useState(\"web\"); \n    const windowWidth = useWindowDimensions().width;\n    useEffect(()=>{\n         if(windowWidth<1920 && windowWidth>1100){\n            setDevice(\"web\")\n         }else if(windowWidth<1100 && windowWidth>600){\n            setDevice(\"tab\")\n        }else if(windowWidth<600  ){\n            setDevice(\"mob\") \n        }\n    },[windowWidth])\n    const renderNavItems=(source,index)=>{\n        return(\n            <TouchableOpacity\n            onMouseEnter={()=>{setHoverItem(source.id)}}\n            onMouseLeave={()=>{\n                setHoverItem(\"\") \n            }}\n            style={[styles.buttonContainer,(props.selectedNavitem===source.id||hoverItem ===source.id) &&styles.selectionIndicator,(device===\"mob\"|| device===\"tab\")&&{borderBottomWidth:0},((props.selectedNavitem===source.id )&&(device===\"mob\"|| device===\"tab\"))&&styles.selectionIndicatorMobile]}\n            onPress={()=>{props.setSelectedNavItem(source.id)}}\n            key={index}>\n                <Text\n                style={[(props.selectedNavitem===source.id||hoverItem ===source.id)&&styles.selectionText]}\n                >{source.name}</Text>\n            </TouchableOpacity>\n        )\n    }\n    // ,justifyContent: 'space-between',flexDirection:'row'\n    return(\n        <>\n        <View \n        \n        style={[{width:'100%',alignItems: 'center',justifyContent: 'space-between',flexDirection:'row'},styles.header]}>\n             <Image\n       style={{height:40,width:40,margin:8,marginHorizontal:16,backgroundColor:'#f7bf50',borderRadius:8}}\n       source={require(\"./../assets/vs.png\")}\n       />\n    {device===\"web\"?(\n        <View style={{flexDirection:'row'}}>\n        {NAV_BAR_DATA.map(renderNavItems)}\n        </View>\n    ):(\n        <TouchableOpacity \n        onPress={()=>{\n            setExpandMenu(!expandMenu)\n        }}\n        style={{paddingHorizontal:8,}}>\n            <MaterialCommunityIcons name=\"menu\" size={32} color=\"black\" />\n            </TouchableOpacity>\n    )}\n    \n        </View>\n        <Divider/>\n        {(device===\"mob\"|| device===\"tab\" ) && expandMenu&&(\n            <View style={{alignItems: 'center',backgroundColor:\"#fff\"}}>\n                {NAV_BAR_DATA.map(renderNavItems)}\n            </View>\n        )}\n        </>\n    )\n}\nconst styles = StyleSheet.create({\n    buttonContainer:{\n        width:90,\n        padding:12,\n        alignItems: 'center',\n        marginHorizontal:4,\n         \n    },\n    selectionIndicator:{\n        borderColor:\"red\",\n        borderBottomWidth:2,\n        backgroundColor:\"#e3e3e3\".replace,\n        \n    },\n    selectionIndicatorMobile:{\n        borderColor:\"red\",\n        borderBottomWidth:0,\n        backgroundColor:\"#e2e2e2\",\n        width:\"100% \"\n        \n    },\n    selectionText:{\n        fontWeight:\"bold\"\n    },\n    header:{\n        backgroundColor: '#fff',\n        alignItems:'center',\n        elevation:2, \n        shadowColor: 'black',\n        shadowOpacity:0.2,\n        shadowRadius:8,\n        padding:0\n      },\n})\nexport default Header;","import React, { useRef, useState } from 'react';\nimport { useEffect } from 'react';\nimport {View,Text, Animated, useWindowDimensions} from 'react-native';\nimport Typed from 'react-typed';\nimport { fadeIn } from '../utils';\nconst AboutLeft =()=>{\n    const [tagLineDisplay,setTagLineDisplay] = useState(false)\n    const [secondLine,setSecondline] = useState(false)\n    const fadeAnim = useRef(new Animated.Value(0)).current;\n    const [device,setDevice] = useState(\"web\"); \n    const windowWidth = useWindowDimensions().width;\n    useEffect(()=>{\n         if(windowWidth<1920 && windowWidth>1100){\n            setDevice(\"web\")\n         }else if(windowWidth<1100 && windowWidth>600){\n            setDevice(\"tab\")\n        }else if(windowWidth<600  ){\n            setDevice(\"mob\") \n        }\n    },[windowWidth])\n    return (\n        <View style={{flex:1,justifyContent:'center'}}>\n            <View>\n           <View style={{width:'100%',maxWidth:315}}>\n          \n           <Typed\n         \n           style={{fontSize:48,fontWeight:'bold',fontFamily:'Roboto',color:'red',alignSelf:'center'}}\n                    strings={['VINAY']}\n                    typeSpeed={80}\n                    showCursor={false}\n                  \n                    onComplete={()=>{\n                     \n                     // setTagLineDisplay(true)\n                      setSecondline(true)\n                    }}\n                />\n           {secondLine?(\n               <Typed\n         \n               style={{fontSize:48,fontWeight:'bold',fontFamily:'Roboto',alignSelf:'center'}}\n                        strings={['SOUNDERRAJ']}\n                        typeSpeed={80}\n                        showCursor={false}\n                      \n                        onComplete={()=>{\n                         \n                          setTagLineDisplay(true)\n                          fadeIn(fadeAnim,5000)\n                        }}\n                    />\n           ):(null)}\n           </View>\n          \n              <Animated.View style={{opacity:fadeAnim}}>\n                \n                    <Text > {tagLineDisplay?(\"React Native developer at the core and much more...\"):null}</Text>\n              \n             \n              </Animated.View>\n           \n        \n           \n          </View>\n        </View>\n    )\n}\nexport default AboutLeft;","import { Animated } from \"react-native\";\n\nexport const fadeIn = (anim,delay) => {\n    // Will change fadeAnim value to 1 in 3 seconds\n    Animated.timing(anim, {\n      toValue: 1,\n      duration: delay?delay: 3000,\n    }).start();\n  };\n\n export const fadeOut = (anim,delay) => {\n    // Will change fadeAnim value to 0 in 3 seconds\n    Animated.timing(anim, {\n      toValue: 0,\n      duration:  delay?delay: 3000,\n    }).start();\n  };","import React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport {View,Text, Image, TouchableOpacity, StyleSheet, useWindowDimensions } from 'react-native';\nimport { FlatList, ScrollView } from 'react-native-gesture-handler';\nimport AboutLeft from '../Components/AboutLeft';\nimport { MAIN_TOOLS, NAV_BAR_DATA } from './DataConstants';\n\nconst Home = (props)=>{\n    const [device,setDevice] = useState(\"web\"); \n    const windowWidth = useWindowDimensions().width;\n    useEffect(()=>{\n         if(windowWidth<1920 && windowWidth>1100){\n            setDevice(\"web\")\n         }else if(windowWidth<1100 && windowWidth>600){\n            setDevice(\"tab\")\n        }else if(windowWidth<600  ){\n            setDevice(\"mob\") \n        }\n    },[windowWidth])\n      const renderTools=(source,index)=>{\n          return(\n              <View key={source.id} style={{alignItems: 'center',justifyContent: 'center',margin:12}}>\n                  <Image\n                  style={{height:80,width:80}}\n                  source={source.image}\n                  />\n                  <Text>{source.name}</Text>\n                  <br/>\n              </View>\n          )\n      }\n    return(\n        <View style={[{flex:1, flexDirection:'row'},(device===\"mob\"||device===\"tab\")&&{flexDirection:'column'}]}>\n       <View style={{flex:1, alignItems: 'center',justifyContent: 'center',}}>\n       <AboutLeft/>\n       </View>\n       <View style={{flex:1, alignItems: 'center',justifyContent: 'center',}}>\n         <View style={{ flexDirection:device===\"mob\"?'column':'row'}}>\n           <View style={{flexDirection:'row'}}>\n           {[MAIN_TOOLS[0],MAIN_TOOLS[1]].map(renderTools)} \n           </View>\n           <View style={{flexDirection:'row'}}>\n           {[MAIN_TOOLS[2],MAIN_TOOLS[3]].map(renderTools)} \n           </View>\n         </View>\n       </View>\n        </View>\n    )\n}\nconst styles = StyleSheet.create({\n     \n})\nexport default Home;","import React from 'react';\nimport { View,Text  } from 'react-native';\nimport { Title } from 'react-native-paper';\n\nconst CustomTabHeader  =(props)=>{\n    const title=props.title?props.title:\"None\"\n    return(\n        <View style={{width:'100%',justifyContent:'center'}}>\n               <View \n               style={{height:0.5,\n                position:'absolute',\n\n            backgroundColor:\"#a3a3a3\", width:'80%',alignSelf:'center'}}\n               />\n            <View style={{alignSelf:'center',backgroundColor:'#fff',boxShadow:\"0px 0px 5px #a3a3a3\",width:200,alignItems: 'center',borderRadius:40,zIndex:2}}>\n            <Title>{title}</Title>\n            </View>\n           </View>\n    )\n}\nexport default CustomTabHeader;","import React, { useState } from 'react';\nimport { View,Text, FlatList, TouchableOpacity, useWindowDimensions  } from 'react-native';\nimport { PROJECTS } from './DataConstants';\nimport Typed from 'react-typed';\nimport CustomTabHeader from '../Constant/CustomTabHeader';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { useEffect } from 'react';\nconst Works = ()=>{\n    const [selectedId,setSelectedId] = useState(\"\")\n    const [device,setDevice] = useState(\"web\"); \n    const windowWidth = useWindowDimensions().width;\n    useEffect(()=>{\n         if(windowWidth<1920 && windowWidth>1100){\n            setDevice(\"web\")\n         }else if(windowWidth<1100 && windowWidth>600){\n            setDevice(\"tab\")\n        }else if(windowWidth<600  ){\n            setDevice(\"mob\") \n        }\n    },[windowWidth])\n   \n    const renderProjects=({item,index})=>{\n         \n        return(\n            <TouchableOpacity \nonMouseEnter={()=>setSelectedId(item.title)}\nonMouseLeave={()=>setSelectedId(\"\")}\n            onPress={()=>{window.open(item.url)}}\n            style={{height:250,width:250,margin:24 ,alignItems:'center',justifyContent: 'center',borderRadius:12,padding:12}}>\n                <LinearGradient\n        // Button Linear Gradient\n        colors={item.color}\n        style={ {height:250,width:250,margin:24 ,alignItems:'center',justifyContent: 'center',borderRadius:12,padding:12}}>\n                <Text\n                style={{color:\"#fff\",fontSize:18,fontWeight:'bold',fontFamily:'Roboto',textAlign:'center'}}\n                >{item.title}</Text>\n               {item.title===selectedId&&(\n                    <Typed\n                \n                    style={{fontSize:14, fontFamily:'Roboto',color:'#fff'}}\n                    strings={[item.desc]}\n                    typeSpeed={80}\n                    showCursor={false} \n                    />\n               )}\n      </LinearGradient>\n                \n            </TouchableOpacity>\n        )\n    }\n    return(\n        <View style={{flex:1,width:'100%',alignItems:'center',justifyContent: 'center'  }}>\n           \n           <View style={{flex:1,width:'100%',justifyContent:'center'}}>\n           <View style={[{width:'100%' },(device===\"web\"|| device===\"tab\")&&{alignItems:\"center\"}]}>\n           <FlatList\n            contentContainerStyle={{ alignSelf:'center'}}\n            horizontal\n            data={PROJECTS}\n            renderItem={renderProjects}\n            \n            />\n            <Text\n                style={{ fontSize:18,fontWeight:'bold',fontFamily:'Roboto',alignSelf:'center'}}\n                >and more ...</Text>\n           </View>\n           </View>\n            <View>\n            \n            </View>\n        </View>\n    )\n}\nexport default Works;","import React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { View,Text, TouchableOpacity, StyleSheet, Image, useWindowDimensions  } from 'react-native';\nimport { Subheading, Title } from 'react-native-paper';\nimport CustomTabHeader from '../Constant/CustomTabHeader';\n\nconst Blogs = (props)=>{\n    const [hoverItem,setHoverItem] = useState(false)\n    const [device,setDevice] = useState(\"web\"); \n    const windowWidth = useWindowDimensions().width;\n    useEffect(()=>{\n         if(windowWidth<1920 && windowWidth>1100){\n            setDevice(\"web\")\n         }else if(windowWidth<1100 && windowWidth>600){\n            setDevice(\"tab\")\n        }else if(windowWidth<600  ){\n            setDevice(\"mob\") \n        }\n    },[windowWidth])\n    return(\n        <View style={{ flex:1}}>\n            <View style={{alignItems:'center'}}>\n           \n            </View>\n            <View style={[{flexDirection:'row',flex:1},(device===\"tab\"||device===\"mob\")&&{flexDirection:'column'}]}>\n                <View style={{flex:1,alignItems: 'center',justifyContent: 'center',}}>\n               <View>\n               <Image\n               source={require(\"./../assets/blogicon.png\")}\n               style={[{width:426,height:330,alignSelf:'center'},device===\"mob\"&&{width:250,height:192}]}\n               resizeMode=\"contain\"\n               />\n              \n               </View>\n                </View>\n                <View style={{flex:1,alignItems: 'center',justifyContent: 'center',margin:12 }}>\n                \n                <Title >Why and What I write...</Title>\n                <Subheading style={{textAlign: 'center',}}>I believe in sharing my knowledge with others is one of the best ways to hone your own skills.\n                \n                </Subheading>\n               \n                <TouchableOpacity\n            onMouseEnter={()=>{setHoverItem(true)}}\n            onMouseLeave={()=>{setHoverItem(false)}}\n            style={[styles.buttonContainer,( hoverItem ) &&styles.selectionIndicator]}\n            onPress={()=>{ props.navigation.navigate(\"BlogIndex\")}}\n            >\n                <Text\n                style={[( hoverItem )&&styles.selectionText]}\n                >{\"View my blogs\"}</Text>\n            </TouchableOpacity>\n                </View>\n            </View>\n\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    selectionIndicator:{\n        \n        backgroundColor:\"#e3e3e3\".replace,\n        borderRadius:4,\n        backgroundColor:'red'\n    },\n    buttonContainer:{\n        \n        padding:12,\n        alignItems: 'center',\n        marginHorizontal:4,\n        borderColor:\"red\",\n        borderWidth:1,\n        borderRadius:4\n    },\n    selectionText:{\n        fontWeight:\"bold\",\n        color:\"#fff\"\n    },\n})\nexport default Blogs;","import React from 'react';\nimport { useState } from 'react';\nimport { View, Text, TextInput, TouchableOpacity,  } from 'react-native';\nimport { Title } from 'react-native-paper';\n\nconst BlogHeader = ()=>{\n    \n    return (\n        <View style={{backgroundColor:\"#F7BF50\"}}>\n            <View style={{flexDirection:'row',justifyContent:'space-between',padding:4}}>\n             \n            <Title style={{fontWeight:\"bold\"}}>VS BLOGS </Title>\n            <View style={{ justifyContent: 'center', }}>\n                <Text>Follow me on:</Text>\n            </View>\n           \n        </View>\n        {/* <View style={{padding:12 }}>\n            <Text>Easy filter</Text>\n        </View> */}\n        </View>\n    )\n}\n\nexport default BlogHeader;","import React from 'react';\nimport {View,Text, Image} from 'react-native';  \nimport { useMediaQuery } from 'react-native-media-query';\nimport { BLOGDATA } from '../Constant/TextConstants';\n\nconst AboutContact= ()=>{\n \n  const styles1 = {\n    container:{\n          '@media (max-width: 600px)': {\n              flexDirection:'column'\n          },\n      },\n      carousel: {\n          '@media (max-width: 600px)': {\n           \n        },\n      }\n    }\n  \n    \n    const [ids, styles] = useMediaQuery(styles1);\n    return(\n      <View style={{flex:1 }}>\n          {/* <View style={{position:'absolute'}}>\n            <Text>HELLO</Text>\n          </View>\n          <View\n          style={{borderWidth:0.001,borderColor:'grey'}}/> */}\n         \n            <View style={{flexDirection:'row',flex:1}}>\n              \n              <View style={[{justifyContent:'center',alignItems:'center',flex:1}]}>\n           \n           <Image\n           style={{height:300,width:294 ,borderRadius:150}}\n           source={require(\"./../assets/pp.jpg\")}\n           />\n           <View style={{alignItems:'center',width:\"100%\",maxWidth:350,padding:12,justifyContent:'center',marginHorizontal:24}}>\n                \n                 <Text style={{fontFamily:'Roboto',textAlign:'justify'}}>{BLOGDATA}</Text>\n             </View>\n       </View>\n               \n             \n            </View>\n      </View>\n    )\n}\nexport default AboutContact;","import React, { useEffect, useState } from \"react\";\nimport { View, Text, TextInput, TouchableOpacity } from \"react-native\";\nimport axios from \"axios\";\nimport { Title } from \"react-native-paper\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\nconst ContactForm = () => {\n  //     const ADD_SKILL = gql`\n  // mutation addSkill($id:String!, $name:String!, $level:Float!, $type:String!) {\n  //   addSkill(id:$id, name:$name, level:$level, type:$type) {\n  //     status\n  //     id\n  //     name\n  //     level\n  //     type\n  //   }\n  // }\n  // `\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [comment, setComment] = useState(\"\");\n  const [submitButtobHover, setsubmitButtobHover] = useState(false);\n  const sendMail = () => {\n    if (name.length > 0 && email.length > 0 && comment.length > 0) {\n      \n    \n    // axios.post(\"http://localhost:1337/vs-contacts\",{\n    //     name: name,\n    //     email: email,\n    //     phone:phone,\n    //     message: comment, \n    // }).then(()=>{\n        axios\n        .post(\"https://secret-island-95358.herokuapp.com/contact\", {\n          name: name,\n          email: email,\n          comment: comment,\n        })\n        .then(()=>{} )\n        .catch(()=>{});\n    // })\n    }\n    // axios.post('http://localhost:8080/contact', {\n\n    //   firstName: 'Finn',\n    //   lastName: 'Williams'\n\n    // }).then(res=>console.log(\"response is\",res))\n    // .catch(err => console.log(\"error is\",err))\n    //   }\n  };\n  return (\n    <View style={{ flex: 1, justifyContent: \"center\" }}>\n      <View>\n        <View\n          style={{\n            flex: 1,\n            alignItems: \"center\",\n            backgroundColor: \"#fff\",\n            alignSelf: \"center\",\n            borderRadius: 12,\n            width:\"90%\",\n            maxWidth:400,\n            padding:12,\n            boxShadow:\"2px 2px 5px #e2e2e2\"\n          }}\n        >\n          \n            <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n              <Title>Wanna get in touch?</Title>\n            </View>\n            <TextInput\n              onChangeText={setName}\n              placeholder={\"Enter name\"}\n              style={{\n                outline:\"none\",\n                backgroundColor:\"#fff\",\n                height: 40,\n                justifyContent: \"center\",\n                borderWidth: 1,\n                maxWidth: 315,\n                marginVertical: 12,\n                width: \"100%\",\n                borderRadius: 8,\n                borderColor: \"grey\",\n                fontFamily: \"Roboto\",\n                paddingLeft: 4,\n              }}\n            />\n            <TextInput\n              onChangeText={setEmail}\n              placeholder={\"Enter email\"}\n              style={{\n                outline:\"none\",\n                backgroundColor:\"#fff\",\n                height: 40,\n                justifyContent: \"center\",\n                borderWidth: 1,\n                maxWidth: 315,\n                marginVertical: 12,\n                width: \"100%\",\n                borderRadius: 8,\n                borderColor: \"grey\",\n                fontFamily: \"Roboto\",\n                paddingLeft: 4,\n              }}\n            />\n            <TextInput\n              onChangeText={setPhone}\n              placeholder={\"Enter phone\"}\n              style={{\n                outline:\"none\",\n                backgroundColor:\"#fff\",\n                height: 40,\n                borderWidth: 1,\n                maxWidth: 315,\n                marginVertical: 12,\n                width: \"100%\",\n                borderRadius: 8,\n                borderColor: \"grey\",\n                fontFamily: \"Roboto\",\n                paddingLeft: 4,\n              }}\n            />\n            <TextInput\n              onChangeText={setComment}\n              placeholder={\"Enter comment\"}\n              multiline={true}\n              numberOfLines={4}\n              style={{\n                outline:\"none\",\n                  backgroundColor:\"#fff\",\n                height: 120,\n                textAlignVertical: \"top\",\n                borderWidth: 1,\n                maxWidth: 315,\n                marginVertical: 12,\n                width: \"100%\",\n                borderRadius: 8,\n                borderColor: \"grey\",\n                fontFamily: \"Roboto\",\n                paddingLeft: 4,\n                padding: 10,\n              }}\n            />\n            <TouchableOpacity\n              onMouseEnter={() => {\n                setsubmitButtobHover(true);\n              }}\n              onMouseLeave={() => {\n                setsubmitButtobHover(false);\n              }}\n              style={[\n                {\n                 \n                  height: 40,\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  textAlignVertical: \"top\",\n                  borderWidth: 1,\n                  maxWidth: 315,\n                  marginVertical: 12,\n                  width: \"100%\",\n                  borderRadius: 8,\n                  borderColor: \"red\",\n                  fontFamily: \"Roboto\",\n                  paddingLeft: 4,\n                },\n                submitButtobHover&&{ backgroundColor: \"red\" },\n              ]}\n              onPress={() => {\n                sendMail();\n              }}\n            >\n              <Text\n                style={[\n                  { fontWeight: \"bold\", color: \"#2e2e2e\" },\n                 submitButtobHover&& { color: \"#fff\" },\n                ]}\n              >\n                Submit\n              </Text>\n            </TouchableOpacity>\n           \n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default ContactForm;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { View, Text, ScrollView, FlatList, Image, StyleSheet } from \"react-native\"; \nimport { NAV_BAR_DATA } from \"../../UI/DataConstants\";\nimport Header from \"../../UI/Header\";\nimport Home from \"./../../UI/Home\";\nimport { useWindowDimensions } from \"react-native\";\nimport Works from \"../../UI/Works\";\nimport Blogs from \"../../UI/Blogs\";\nimport BlogHeader from \"../../Blog/BlogHeader\";\nimport CustomTabHeader from \"../../Constant/CustomTabHeader\";\nimport AboutMe from \"../AboutMe/AboutMe\";\nimport AboutContact from \"../../UI/AboutContact\";\nimport ContactForm from \"../../UI/ContactForm\";\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\nconst Index = (props) => {\n  const windowHeight = useWindowDimensions().height;\n  const styles = StyleSheet.create({\n    icon:{\n        marginHorizontal:6\n    },\n    containerItems :{\n         height:windowHeight,\n         maxHeight:1080\n    }\n  })\n  const [selectedNavitem, setSelectedNavItem] = useState(NAV_BAR_DATA[0].id);\n  \n  const inputEl = useRef(null);\n   \n  const scrollRef = useRef(null);\n  const [bodyHeight, setBodyHeight] = useState(0);\n  useEffect(() => {\n    if (inputEl.current) {\n      inputEl.current.measure((fx, fy, width, height, px, py) => {\n        setBodyHeight(height);\n        \n      });\n    }\n  }, [inputEl,windowHeight]);\n  const renderBodyItems = ({ item, index }) => {\n    switch (item.id) {\n      case \"0\":\n        return (\n          <View style={[styles.containerItems]} >\n            <Home />\n          </View>\n        );\n      case \"1\":\n        return (\n          <View style={[styles.containerItems]} >\n            <CustomTabHeader title=\"Works\" />\n            <Works />\n          </View>\n        );\n      case \"2\":\n        return (\n          <View style={[styles.containerItems]} >\n            <CustomTabHeader title=\"Blogs\" />\n            <Blogs navigation={props.navigation} />\n          </View>\n        );\n      case \"3\":\n        return (\n          <View style={[styles.containerItems]}>\n            <CustomTabHeader title=\"About\" />\n            <AboutContact navigation={props.navigation} />\n          </View>\n        );\n        case \"4\":\n            return (\n              <View style={[styles.containerItems]} >\n                <CustomTabHeader title=\"Contact\" />\n                <ContactForm navigation={props.navigation} />\n              </View>\n            );\n    }\n  };\n  const navBarSelection = (id)=>{\n    setSelectedNavItem(id)\n    scrollRef.current.scrollToIndex({\n        index: parseInt(id),\n        viewOffset:10\n    })\n  }\n  const HandleScroll = (event)=>{  \n    setTimeout(()=>{\n      setSelectedNavItem((Math.round(event.nativeEvent.contentOffset.y/bodyHeight)).toString())\n    },500)\n   }\n   const iconCLick=(ele)=>{\n     \n   }\n  const listFooterComponent=()=>{\n    return (\n       <View style={{ backgroundColor:\"#2e2e2e\", alignItems: 'center',padding:40}}>\n          <Image\n          source={require(\"./../../assets/vs.png\")}\n          style={{height:60,width:60,borderRadius:8}}\n          />\n          <View style={{flexDirection:'row',padding:12}}>\n          <MaterialCommunityIcons\n          onPress={()=>iconCLick(\"insta\")}\n          style={[styles.icon]} name=\"instagram\" size={24} color=\"#C13584\" />\n          <MaterialCommunityIcons style={[styles.icon]} name=\"facebook\" size={24} color=\"#3B5998\" />\n          <MaterialCommunityIcons style={[styles.icon]} name=\"twitter\" size={24} color=\"#1DA1F2\" />\n          <MaterialCommunityIcons style={[styles.icon]} name=\"github\" size={24} color=\"#4078c0\" />\n          <MaterialCommunityIcons style={[styles.icon]} name=\"linkedin\" size={24} color=\" #0e76a8\" />\n          </View>\n       </View>\n    )\n  }\n\n  return (\n    <View style={{ flex: 1,width:'100%',maxWidth:1920,alignSelf:'center' }}>\n      <Header\n        selectedNavitem={selectedNavitem}\n        setSelectedNavItem={navBarSelection}\n      />\n\n      <View ref={inputEl} style={{ flex: 1,height: bodyHeight }}>\n        <View style={{ height: bodyHeight }}>\n          <FlatList\n          showsVerticalScrollIndicator={false}\n          onScroll={HandleScroll}\n          ref={scrollRef} data={NAV_BAR_DATA} renderItem={renderBodyItems}\n          ListFooterComponent={listFooterComponent}\n          />\n        </View>\n        \n      </View>\n    </View>\n  );\n  \n};\n\nexport default Index;\n","import {\n    ApolloClient,\n    InMemoryCache,\n    \n  } from \"@apollo/client\";\n  export const client = new ApolloClient({\n    uri: 'http://localhost:1337/graphql',\n    cache: new InMemoryCache(\n        {\n            typePolicies:{\n\n                Query:{\n                   fields:{\n                       vsBlogs:{\n                        keyArgs: false,\n                        // Concatenate the incoming list items with\n                        // the existing list items.\n                        merge(existing = [], incoming) {  \n                          return [...existing, ...incoming];\n                        },\n                       }\n                   }\n              }\n            }\n        }\n    )\n  });","import { gql } from \"@apollo/client\";\n\nexport const BLOG_QUERY_MAIN = gql`\nquery($limit:Int, $offset:Int,$filter_word:String,$category:[ENUM_VSBLOGS_CATEGORY] ){\n  vsBlogs(\n     start:$offset,\n    limit:$limit,\n    sort:\"created_at:DESC\",\n    where:{_or:[{title_contains:$filter_word },{category:$category},  {vs_author:{  name_contains:$filter_word}}] }\n  ){\n    id\n    title\n    coverimage\n    created_at\n    author\n    rating\n    category\n    vs_author{\n      id\n      name\n      \n    }\n  }\n}\n`\nexport const GET_SINGLE_BLOG = gql`\nquery($blog_id:ID!){\n  vsBlog(id:$blog_id){\n    id\n    title\n    author\n    post\n    created_at\n    rating\n    upvotes\n    downvotes\n    vs_author{\n      id\n      name\n      \n    }\n  }\n}\n`","const secret_key_encryption = \"'XD=8y9%%g)gn}irFC5l2!]>G5[c8|\";\nvar CryptoJS = require(\"crypto-js\");\nexport const encryption = (id) => {\n  var ciphertext = CryptoJS.AES.encrypt(id, secret_key_encryption).toString();\n  return ciphertext;\n};\nexport const decryption = (ciphertext) => {\n  var bytes = CryptoJS.AES.decrypt(ciphertext, secret_key_encryption);\n  var originalText = bytes.toString(CryptoJS.enc.Utf8);\n  return originalText;\n};\n","import { useQuery } from \"@apollo/client\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { FlatGrid } from \"react-native-super-grid\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  FlatList,\n  ActivityIndicator,\n  Image,\n  TextInput,\n} from \"react-native\";\nimport { client } from \"../ApolloProvider/ApolloClient\";\nimport BlogHeader from \"./BlogHeader\";\nimport { BLOG_QUERY_MAIN } from \"./Queries\";\nimport { useEffect } from \"react\";\nimport { encryption } from \"../Constant/utility\";\nimport { Caption, Checkbox, Modal, Title } from \"react-native-paper\";\nimport date from \"date-and-time\";\nconst BlogIndex = (props) => {\n  const [visible, setVisible] = React.useState(false);\n\n  const showModal = () => setVisible(true);\n  const hideModal = () => setVisible(false);\n  const containerStyle = {\n    backgroundColor: \"white\",\n    padding: 20,\n    width: \"60%\",\n    alignSelf: \"center\",\n  };\n  const [blogname, setBlogname] = useState(\"\");\n  useEffect(() => { \n    return () => {\n      \n    };\n  });\n  \n  const [limit, setLimit] = useState(6);\n  const [offset, setOffset] = useState(0);\n  const [loadFooter, setLoadFooter] = useState(0);\n  const [categories, setCategories] = useState([]);\n  const [extraData, setExtraData] = useState(false);\n  const { data, error, loading, fetchMore, refetch } = useQuery(\n    BLOG_QUERY_MAIN,\n    {\n      variables: {\n        limit: limit,\n        offset: offset,\n        filter_word: blogname,\n        category: categories,\n      },\n    }\n  );\n  if (data) {\n    \n  }\n  if (loading) {\n     \n  }\n  if(error){\n      \n  }\n  const renderBlogs = ({ item, index }) => {\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          props.navigation.navigate(\"BlogPost\", {\n            id: item.id,\n          });\n        }}\n        style={{\n          boxShadow: \"0px 0px 5px #757575\",\n\n          shadowColor: \"black\",\n          shadowOpacity: 0.4,\n          margin: 12,\n          alignItems: \"center\",\n          padding: 12,\n          borderRadius: 4,\n        }}\n      >\n        <Image\n          style={{ height: 120, width: \"100%\" }}\n          source={item.coverimage}\n        />\n        <View style={{ width: \"100%\" }}>\n          <Title numberOfLines={1}>{item.title}</Title>\n          <View>\n            <Caption>{item.vs_author.name}</Caption>\n            <Caption>\n              {date.format(new Date(item.created_at), \"ddd MMM DD YYYY\")}\n            </Caption>\n          </View>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n  const searchFunction = (val) => {\n    setBlogname(val);\n    \n    refetch({\n      limit: 6,\n      offset: 0,\n      filter_word: val,\n    });\n  };\n  const checkBoxValidation=(val)=>{\n      //Add to array if checkbox value is not in array and vice versa\n      if(categories.indexOf(val)>=0){\n          //remove category from array\n            let temp = categories;\n            temp.splice(temp.indexOf(val), 1);\n            \n            setCategories(\"temp\")\n            setCategories([...temp])\n          \n      }else{\n          \n          setCategories([...categories,val])\n          \n      }\n  }\nuseEffect(()=>{\n    \n},[categories])\n  const listFooterComponent = () => {\n    if (loadFooter) {\n      return <ActivityIndicator />;\n    } else {\n      if (data.vsBlogs.length == 0) {\n        return <Text>No more blogs</Text>;\n      } else {\n        return (\n          <TouchableOpacity\n            style={{ alignSelf: \"center\" }}\n            onPress={() => {\n              let off_set = offset + 6;\n              setOffset(off_set);\n              setLoadFooter(true);\n              fetchMore({\n                variables: {\n                  limit: limit,\n                  offset: off_set,\n                },\n              }).then((res) => {\n                setLoadFooter(false);\n                \n              });\n            }}\n          >\n            <Text>Fetch More</Text>\n          </TouchableOpacity>\n        );\n      }\n    }\n  };\n  return (\n    <View style={{ flex: 1, flexDirection: \"row\", backgroundColor: \"#e2e2e2\" }}>\n      <View style={{ flex: 1 }}></View>\n      <View style={{ flex: 3, backgroundColor: \"#fff\" }}>\n        <BlogHeader />\n        <View style={{ flex: 1, flexDirection: \"row\" }}>\n          <View style={{ flex: 3 }}>\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignSelf: \"flex-end\",\n                padding: 12,\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                <TextInput\n                  style={{\n                    boxShadow: \"0px 0px 2px #242424\",\n                    borderColor: \"#121212\",\n                    borderRadius: 4,\n                    padding: 4,\n                  }}\n                  placeholder={\"Enter blog name or author...\"}\n                  value={blogname}\n                  onChangeText={searchFunction}\n                />\n                <TouchableOpacity\n                  onPress={() => {\n                    showModal();\n                  }}\n                  style={{\n                    boxShadow: \"0px 0px 2px #242424\",\n                    backgroundColor: \"#f2f2f2\",\n                    padding: 8,\n                    borderRadius: 4,\n                    marginHorizontal: 4,\n                  }}\n                >\n                  <Text style={{ color: \"#000\" }}>Category</Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n            {data && (\n              <FlatGrid\n                itemDimension={200}\n                extraData={extraData}\n                data={data.vsBlogs}\n                renderItem={renderBlogs}\n                ListFooterComponent={listFooterComponent}\n              />\n            )}\n          </View>\n        </View>\n        <Modal\n          visible={visible}\n          onDismiss={hideModal}\n          contentContainerStyle={containerStyle}\n        >\n          <View style={{flexDirection:'row',alignItems: 'center',}}>\n            <Checkbox \n            status={categories.indexOf(\"it\")>=0 ? 'checked' : 'unchecked'}\n              value={\"it\"}\n              onPress={()=>checkBoxValidation(\"it\")}\n            />\n            <Text>IT</Text>\n          </View>\n          <View style={{flexDirection:'row',alignItems: 'center',}}>\n            <Checkbox \n            status={categories.indexOf(\"programming\")>=0 ? 'checked' : 'unchecked'}\n              value={\"programming\"}\n              onPress={()=>checkBoxValidation(\"programming\")}\n            />\n            <Text>Programming</Text>\n          </View>\n          <View style={{flexDirection:'row',alignItems: 'center',}}>\n            <Checkbox \n            status={categories.indexOf(\"general\")>=0 ? 'checked' : 'unchecked'}\n              value={\"general\"}\n              onPress={()=>checkBoxValidation(\"general\")}\n            />\n            <Text>General</Text>\n          </View>\n        </Modal>\n      </View>\n      <View style={{ flex: 1 }}></View>\n    </View>\n  );\n};\nexport default BlogIndex;\n","import { useQuery } from '@apollo/client';\nimport React from 'react';\nimport { View,Text, ScrollView, ActivityIndicator } from 'react-native';\nimport { GET_SINGLE_BLOG } from './Queries';\nimport Markdown from 'react-native-markdown-display';\nimport date from 'date-and-time';\nimport { decryption } from '../Constant/utility';\nimport { Caption, Divider, Paragraph, Title } from 'react-native-paper';\nconst BlogPost = (props)=>{\n   \n    const blog_id =  props.route.params.id \n   \n    const {data,error,loading} = useQuery(GET_SINGLE_BLOG,{\n        variables:{\n            blog_id:blog_id\n        }\n    })\n    if(data){\n        \n    }\n    return (\n        <View style={{flex:2,flexDirection:'row'}}>\n            <View style={{flex:2}}>\n              \n              </View>\n           <View style={{ flex:4,backgroundColor:'#fff'}}>\n            \n          <View style={{flexDirection:'row',justifyContent:'space-between' ,padding:12,backgroundColor:\"#F7BF50\"}}> \n          <Title>VS BLOGS</Title>\n          \n          </View>\n          <Divider  />\n           {data&&(\n               <ScrollView\n               contentContainerStyle={{ padding:12}}\n               contentInsetAdjustmentBehavior=\"automatic\"\n               style={{height: '100%'}}\n             >\n                 <Title>{data.vsBlog.title}</Title>\n                 <View >\n                     <Paragraph>{data.vsBlog.vs_author.name},</Paragraph>\n                     <Caption>{date.format(new Date(data.vsBlog.created_at), 'ddd MMM DD YYYY')}</Caption>\n                 </View>\n               <Markdown\n               style={markdownStyles}\n               >\n                  {data.vsBlog.post}\n               </Markdown>\n               <Divider  />\n               <View style={{flexDirection:'row'}}>\n                   <View style={{flex:1}}>\n                   <Text>Rate this article</Text>\n                   </View>\n                   <View style={{flexDirection:'row',alignItems: 'center',}}>\n                   <Text>Upvotes:{data.vsBlog.upvotes} || </Text>\n                   <Text>Downvotes:{data.vsBlog.downvotes}</Text>\n                   </View>\n               </View>\n             </ScrollView>\n           )}\n           {loading&&(\n               <ActivityIndicator/>\n           )}\n           <View>\n\n           </View>\n           </View>\n           <View style={{flex:2}}>\n              \n            </View>\n            \n        </View>\n    )\n}\nconst markdownStyles = {\n    heading1: {\n      fontSize: 24,\n      color: 'purple',\n    },\n    link: {\n      color: 'pink',\n    },\n    mailTo: {\n      color: 'orange',\n    },\n    text: {\n        \n      fontSize:16,\n      color: '#151515',\n      fontFamily:\"roboto\"\n    },\n  };\nexport default BlogPost;","import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useRef, useState } from 'react';\nimport {  StyleSheet, Text, TouchableOpacity, View } from 'react-native'; \nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Tools from './Components/Screens/Tools'; \nimport Index from './Components/MainStack/Index';\nimport BlogIndex from './Blog/BlogIndex';\nimport { ApolloProvider } from '@apollo/client';\nimport { client } from './ApolloProvider/ApolloClient';\nimport BlogPost from './Blog/BlogPost';\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport AppLoading from 'expo-app-loading';\nimport { useFonts } from 'expo-font';\nconst Stack = createStackNavigator();\nexport default function App() { \n \n  const config = {\n    screens: {\n      MainScreen: '',\n      BlogIndex:'/blog',\n      BlogPost:'/blog/post/:id',\n      Tools: '/skills',\n      PrivacyPolicy: '/privacypolicy',\n      NotFound: '*',\n    },\n  };\n  const state = {\n   \n        state: {\n          routes: [\n            {\n              name: 'BlogIndex',\n              \n              \n            },\n            {\n              name:'MainScreen'\n            }\n          ],\n        },\n       \n  };\n  const linking = {\n    prefixes: ['https://vinays.dev', 'vinays.dev://','http:localhost:19006'],\n    config,\n   state\n  };\n\n  let [fontsLoaded] = useFonts({\n    'roboto': require('./assets/fonts/Roboto-Regular.ttf'),\n  });\n\n  if (!fontsLoaded) {\n    return <AppLoading />;\n  }else{\n\n\n  return (\n    <ApolloProvider client={client}>\n       <PaperProvider>\n     <NavigationContainer linking={linking}  fallback={<Text>Loading...</Text>}>\n      <Stack.Navigator\n      screenOptions={\n        {\n          headerShown:false\n        }\n      }>\n       \n        <Stack.Screen name=\"MainScreen\" component={Index} options={{title:\"Home\"}}/>\n        <Stack.Screen name=\"BlogIndex\" component={BlogIndex}/>\n        <Stack.Screen name=\"BlogPost\" component = {BlogPost}/> \n      </Stack.Navigator>\n    </NavigationContainer>\n    </PaperProvider>\n    </ApolloProvider>\n     \n    \n  );  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n   \n   \n  },\n  header:{\n    \n    \n    backgroundColor: '#fff',\n    alignItems:'center',\n    elevation:2,\n   \n    shadowColor: 'black',\n    shadowOpacity:0.2,\n            shadowRadius:8,\n            padding:12\n  },\n  navbar:{\n    flexDirection:'row',\n   \n   \n   \n\n  },\n  navitem:{\n     paddingHorizontal:12,\n    \n  },\n  navitemActive:{\n    borderBottomWidth:1,borderColor:'red'\n  },\n  navText:{\n   fontSize:16,\n   fontWeight:'300',\n   fontFamily:\"Roboto\"\n  },\n  body:{\n   flex:1,\n  \n  }\n});\n","module.exports = __webpack_public_path__ + \"static/media/apollo.8464b06a.png\";","module.exports = __webpack_public_path__ + \"static/media/strapi.1758cefe.png\";","module.exports = __webpack_public_path__ + \"static/media/graphql.a9e74a7e.png\";","module.exports = __webpack_public_path__ + \"static/media/blogicon.474c0618.png\";","module.exports = __webpack_public_path__ + \"static/media/pp.01ba2f0c.jpg\";","module.exports = __webpack_public_path__ + \"./fonts/Roboto-Regular.ttf\";"],"sourceRoot":""}