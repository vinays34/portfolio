{"version":3,"sources":["assets/rnlogo.png","assets/vs.png","Constant/TextConstants.js","Components/Screens/Tools.js","UI/DataConstants.js","UI/Header.js","Components/AboutLeft.js","utils.js","UI/Home.js","Constant/CustomTabHeader.js","UI/Works.js","UI/Blogs.js","Blog/BlogHeader.js","UI/AboutContact.js","UI/ContactForm.js","Components/MainStack/Index.js","ApolloProvider/ApolloClient.js","Blog/Queries.js","Constant/utility.js","Blog/BlogIndex.js","Blog/BlogPost.js","App.js","assets/apollo.png","assets/strapi.png","assets/graphql.png","assets/blogicon.png","assets/pp.jpg","assets/fonts/Roboto-Regular.ttf"],"names":["module","exports","BLOGDATA","require","StyleSheet","create","container","flex","marginHorizontal","item","backgroundColor","margin","borderRadius","shadowColor","shadowOpacity","shadowRadius","padding","marginVertical","header","fontSize","fontFamily","title","NAV_BAR_DATA","id","name","MAIN_TOOLS","image","PROJECTS","url","desc","color","styles","buttonContainer","width","alignItems","selectionIndicator","borderColor","borderBottomWidth","replace","selectionText","fontWeight","elevation","Header","props","useState","hoverItem","setHoverItem","View","style","justifyContent","flexDirection","Image","height","source","map","index","TouchableOpacity","onMouseEnter","onMouseLeave","selectedNavitem","onPress","setSelectedNavItem","key","Text","AboutLeft","tagLineDisplay","setTagLineDisplay","secondLine","setSecondline","fadeAnim","useRef","Animated","Value","current","maxWidth","strings","typeSpeed","showCursor","onComplete","anim","delay","timing","toValue","duration","start","opacity","Home","horizontal","data","renderItem","CustomTabHeader","position","alignSelf","boxShadow","zIndex","Title","Works","selectedId","setSelectedId","FlatList","contentContainerStyle","window","open","LinearGradient","colors","textAlign","borderWidth","Blogs","resizeMode","Subheading","navigation","navigate","BlogHeader","AboutContact","useMediaQuery","carousel","ContactForm","setName","email","setEmail","phone","setPhone","comment","setComment","submitButtobHover","setsubmitButtobHover","minWidth","TextInput","onChangeText","placeholder","outline","paddingLeft","multiline","numberOfLines","textAlignVertical","length","console","log","axios","post","message","then","res","catch","err","icon","Index","windowHeight","useWindowDimensions","inputEl","scrollRef","bodyHeight","setBodyHeight","useEffect","measure","fx","fy","px","py","scrollToIndex","parseInt","viewOffset","ref","showsVerticalScrollIndicator","onScroll","event","Math","round","nativeEvent","contentOffset","y","toString","ListFooterComponent","MaterialCommunityIcons","ele","size","client","ApolloClient","uri","cache","InMemoryCache","typePolicies","Query","fields","vsBlogs","keyArgs","merge","existing","incoming","BLOG_QUERY_MAIN","gql","GET_SINGLE_BLOG","BlogIndex","React","visible","setVisible","blogname","setBlogname","limit","offset","setOffset","loadFooter","setLoadFooter","categories","setCategories","extraData","useQuery","variables","filter_word","category","error","loading","fetchMore","refetch","checkBoxValidation","val","indexOf","temp","splice","value","itemDimension","coverimage","Caption","vs_author","date","format","Date","created_at","ActivityIndicator","off_set","Modal","onDismiss","Checkbox","status","markdownStyles","heading1","link","mailTo","text","BlogPost","route","params","location","href","blog_id","Divider","ScrollView","contentInsetAdjustmentBehavior","vsBlog","Paragraph","upvotes","downvotes","Stack","createStackNavigator","App","linking","prefixes","config","screens","MainScreen","Tools","PrivacyPolicy","NotFound","state","routes","useFonts","ApolloProvider","NavigationContainer","fallback","Navigator","screenOptions","headerShown","Screen","component","options","navbar","navitem","paddingHorizontal","navitemActive","navText","body"],"mappings":"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","file":"static/js/app.016882a1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rnlogo.5c8c7839.png\";","module.exports = __webpack_public_path__ + \"static/media/vs.99288616.png\";","export const ABOUT = \"ABOUT\";\nexport const WORK = \"WORK\";\nexport const BLOG = \"BLOG\";\nexport const CONTACT = \"CONTACT\";\nexport const HOME = \"HOME\";\n\n//Data for works section\n\nexport const DATA = [\n  {\n    title:\"TAMBOLA PRO\",\n    url:\"https://play.google.com/store/apps/details?id=com.svinay.tambolanext\",\n    desc: \"An Indian bingo number caller.\"\n  },\n  {\n    title:\"LA CARTE - DIGITAL MENU\",\n    url:\"https://play.google.com/store/apps/details?id=com.lacarte.android\",\n    desc: \"Digital menu for restaurents.\"\n  },\n  {\n    title:\"COVID19 WEBSITE\",\n    url:\"https://www.worldcovid19.info\",\n    desc:\"Website displaying covid 19 related info.\"\n  }\n  \n];\nexport const DESC = [\n  \"An Indian bingo number caller.\",\n  \"Digital menu for restaurents.\",\n  \"Website displaying covid 19 related info.\",\n];\n\n//\nexport const BLOGDATA =\n  \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. \";\n\nexport const MAIN_TOOLS_DESC = [\n  \"App Framework\",\n  \"State Management\",\n  \"Query Language\",\n  \"Headless CMS\",\n];\n\n//0-frameworks\n//1-programming language\nexport const SKILLS_SET = [\n  {\n    title: \"FrameWorks\",\n    data: [\n      {\n        name: \"React Native\",\n        desc:\n          \"A javascript frontend framework for building native ios android and web apps\",\n        status: true,\n        type: \"0\",\n        imageurl: \"/rnlogo.png\",\n      },\n      {\n        name: \"Apollo Client\",\n        desc:\n          \"Apollo Client is a comprehensive state management library for JavaScript that enables you to manage both local and remote data with GraphQL.\",\n        status: true,\n        type: \"0\",\n        imageurl: \"/apollo.png\",\n      },\n      {\n        name: \"Graphql\",\n        desc:\n          \"GraphQL is a query language for your API, and a server-side runtime for executing queries by using a type system you define for your data.\",\n        status: true,\n        type: \"0\",\n        imageurl: \"graphql.png\",\n      },\n      {\n        name: \"Strapi\",\n        desc:\n          \"Strapi is a flexible, open-source Headless CMS proiding easy to build API's\",\n        status: true,\n        type: \"0\",\n        imageurl: \"strapi.png\",\n      },\n      {\n        name: \"Angular\",\n        desc:\n          \"Angular is a platform and framework for building single-page client applications using HTML and TypeScript.\",\n        status: false,\n        type: \"0\",\n        imageurl: \"/angular.png\",\n      },\n    ],\n  },\n  {\n    title: \"Programming Languages\",\n    data: [\n      {\n        name: \"Java\",\n        desc:\n          \"Java is a high-level programming language based on Object oriented programming\",\n        status: \"true\",\n        type: \"1\",\n        imageurl: \"/java.png\",\n      },\n      {\n        name: \"Javascript\",\n        desc:\n          \"JavaScript is a lightweight, interpreted, object-oriented language with first-class functions\",\n        status: \"true\",\n        type: \"0\",\n        imageurl: \"js.png\",\n      },\n    ],\n  },\n];\n\nexport const ALL_TOOLS = [\n  {\n    name: \"React Native\",\n    desc:\n      \"A javascript frontend framework for building native ios android and web apps\",\n    status: \"true\",\n    type: \"0\",\n    imageurl: require(\"./../assets/rnlogo.png\"),\n  },\n  {\n    name: \"Apollo Client\",\n    desc:\n      \"Apollo Client is a comprehensive state management library for JavaScript that enables you to manage both local and remote data with GraphQL.\",\n    status: \"true\",\n    type: \"0\",\n    imageurl: require(\"./../assets/rnlogo.png\"),\n  },\n  {\n    name: \"Graphql\",\n    desc:\n      \"GraphQL is a query language for your API, and a server-side runtime for executing queries by using a type system you define for your data.\",\n    status: \"true\",\n    type: \"0\",\n    imageurl: require(\"./../assets/rnlogo.png\"),\n  },\n  {\n    name: \"Strapi\",\n    desc:\n      \"Strapi is a flexible, open-source Headless CMS proiding easy to build API's\",\n    status: \"true\",\n    type: \"0\",\n    imageurl: require(\"./../assets/rnlogo.png\"),\n  },\n  {\n    name: \"Angular\",\n    desc:\n      \"Angular is a platform and framework for building single-page client applications using HTML and TypeScript.\",\n    status: \"false\",\n    type: \"0\",\n    imageurl: require(\"./../assets/rnlogo.png\"),\n  },\n  {\n    name: \"Java\",\n    desc:\n      \"Java is a high-level programming language based on Object oriented programming\",\n    status: \"true\",\n    type: \"1\",\n  },\n  {\n    name: \"Javascript\",\n    desc:\n      \"JavaScript is a lightweight, interpreted, object-oriented language with first-class functions\",\n    status: \"true\",\n    type: \"0\",\n  },\n];\n","import React,{useEffect,useRef,useState} from 'react';\nimport {View,Text, SectionList, StyleSheet, Image} from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\n\nimport Subheader from '../../Constant/Subheader';\nimport { ALL_TOOLS, SKILLS_SET } from '../../Constant/TextConstants';\n\nconst Tools =()=>{\n    const inputEl = useRef(null);\n    const [bodyHeight,setBodyHeight] = useState(0)\n \n    const renderItem=({item,index})=>{\n        return(\n            <View>\n                <Text>{item.name}</Text>\n            </View>\n        )\n    }\n    const Item = ({ title }) => (\n        <View style={[styles.item,{flexDirection:'row'}]}>\n           \n            <Image\n            source={title.imageurl}\n            style={{height:50,width:50,marginHorizontal:12}}\n            />\n         <View style={{flex:1}}>\n        <View style={{flexDirection:'row',alignItems:'center'}}>\n        <Text style={styles.title}>{title.name}</Text>\n       {title.status?(\n            <View style={{height:10,marginHorizontal:4,width:10,borderRadius:15,backgroundColor:'#4be02d'}}/>\n             \n            \n       ):null}\n        </View>\n          <Text>{title.desc}</Text>\n         </View>\n        </View>\n      );\n      useEffect(()=>{\n        if(inputEl.current){\n          inputEl.current.measure((fx, fy, width, height, px, py) => {\n            setBodyHeight(height-0.5)\n          });\n          \n        }\n      },[inputEl.current])\n    return(\n        <View style={{flex:1,backgroundColor:'white',alignItems:'center'}} ref={inputEl}>\n         <View style={{maxWidth:800,height:bodyHeight}}>\n         <SectionList\n         showsVerticalScrollIndicator={false}\n      sections={SKILLS_SET}\n      keyExtractor={(item, index) => item.name + index}\n      renderItem={({ item }) => <Item title={item} />}\n      renderSectionHeader={({ section: { title } }) => (\n          <Subheader name={title}/>\n       \n      )}\n    />\n         </View>\n        </View>\n    )\n}\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n     \n      marginHorizontal: 16\n    },\n    item: {\n      backgroundColor: \"white\",\n      margin:12,\n      borderRadius:12,\n      \n    shadowColor: 'black',\n    shadowOpacity:0.2,\n            shadowRadius:2,\n      padding: 20,\n      marginVertical: 8\n    },\n    header: {\n      fontSize: 28,\n      backgroundColor: \"#fff\",\n      fontFamily:\"Roboto\"\n    },\n    title: {\n      fontSize: 18\n    }\n  });\nexport default Tools;","export const NAV_BAR_DATA = [\n    {\n        id:\"0\",\n        name:\"Home\"\n    },\n    {\n        id:\"1\",\n        name:\"Work\"\n    },\n    {\n        id:\"2\",\n        name:\"Blog\"\n    },\n    {\n        id:\"3\",\n        name:\"About\"\n    },\n    {\n        id:\"4\",\n        name:\"Contact\"\n    },\n    {\n        id:\"5\",\n        name:\"Education\"\n    },\n] \n \nexport const MAIN_TOOLS = [\n    {\n        id:\"1\",\n        name:\"React Native\",\n        image: require(\"./../assets/rnlogo.png\")\n    },\n    {\n        id:\"2\",\n        name:\"Apollo Client\",\n        image: require(\"./../assets/apollo.png\")\n    },\n    {\n        id:\"3\",\n        name:\"Strapi\",\n        image: require(\"./../assets/strapi.png\")\n    },\n    {\n        id:\"4\",\n        name:\"Graphql\",\n        image: require(\"./../assets/graphql.png\")\n    }\n]\n\nexport const PROJECTS = [\n    {\n      title:\"TAMBOLA PRO\",\n      url:\"https://play.google.com/store/apps/details?id=com.svinay.tambolanext\",\n      desc: \"An Indian bingo number caller.\",\n      color:[\"#D8551E\",\"#C52907\"]\n    },\n    {\n      title:\"LA CARTE - DIGITAL MENU\",\n      url:\"https://play.google.com/store/apps/details?id=com.lacarte.android\",\n      desc: \"Digital menu for restaurents.\",\n      color:[\"#C62246\",\"#F55377\"]\n    },\n    {\n      title:\"COVID19 WEBSITE\",\n      url:\"https://vinaysandesh35.000webhostapp.com/\",\n      desc:\"Website displaying covid 19 related info.\",\n      color:[\"#37E8C8\",\"#07A78A\"]\n    }\n    \n  ];","import React, { useState } from 'react';\nimport {View,Text, Image, TouchableOpacity, StyleSheet } from 'react-native';\nimport { NAV_BAR_DATA } from './DataConstants';\n\nconst Header = (props)=>{\n    const [hoverItem,setHoverItem] = useState(\"\")\n    const renderNavItems=(source,index)=>{\n        return(\n            <TouchableOpacity\n            onMouseEnter={()=>{setHoverItem(source.id)}}\n            onMouseLeave={()=>{setHoverItem(\"\")}}\n            style={[styles.buttonContainer,(props.selectedNavitem===source.id||hoverItem ===source.id) &&styles.selectionIndicator]}\n            onPress={()=>{props.setSelectedNavItem(source.id)}}\n            key={index}>\n                <Text\n                style={[(props.selectedNavitem===source.id||hoverItem ===source.id)&&styles.selectionText]}\n                >{source.name}</Text>\n            </TouchableOpacity>\n        )\n    }\n    // ,justifyContent: 'space-between',flexDirection:'row'\n    return(\n        <View style={[{width:'100%',alignItems: 'center',justifyContent: 'space-between',flexDirection:'row'},styles.header]}>\n             <Image\n       style={{height:40,width:40,margin:8,marginHorizontal:16,backgroundColor:'#f7bf50',borderRadius:8}}\n       source={require(\"./../assets/vs.png\")}\n       />\n    <View style={{flexDirection:'row'}}>\n    {NAV_BAR_DATA.map(renderNavItems)}\n    </View>\n        </View>\n    )\n}\nconst styles = StyleSheet.create({\n    buttonContainer:{\n        width:90,\n        padding:12,\n        alignItems: 'center',\n        marginHorizontal:4\n    },\n    selectionIndicator:{\n        borderColor:\"red\",\n        borderBottomWidth:2,\n        backgroundColor:\"#e3e3e3\".replace,\n        \n    },\n    selectionText:{\n        fontWeight:\"bold\"\n    },\n    header:{\n        backgroundColor: '#fff',\n        alignItems:'center',\n        elevation:2, \n        shadowColor: 'black',\n        shadowOpacity:0.2,\n        shadowRadius:8,\n        padding:0\n      },\n})\nexport default Header;","import React, { useRef, useState } from 'react';\nimport {View,Text, Animated} from 'react-native';\nimport Typed from 'react-typed';\nimport { fadeIn } from '../utils';\nconst AboutLeft =()=>{\n    const [tagLineDisplay,setTagLineDisplay] = useState(false)\n    const [secondLine,setSecondline] = useState(false)\n    const fadeAnim = useRef(new Animated.Value(0)).current;\n    return (\n        <View style={{flex:1,justifyContent:'center'}}>\n            <View>\n           <View style={{width:'100%',maxWidth:315}}>\n          \n           <Typed\n         \n           style={{fontSize:48,fontWeight:'bold',fontFamily:'Roboto',color:'red'}}\n                    strings={['VINAY']}\n                    typeSpeed={80}\n                    showCursor={false}\n                  \n                    onComplete={()=>{\n                     \n                     // setTagLineDisplay(true)\n                      setSecondline(true)\n                    }}\n                />\n           {secondLine?(\n               <Typed\n         \n               style={{fontSize:48,fontWeight:'bold',fontFamily:'Roboto'}}\n                        strings={['SOUNDERRAJ']}\n                        typeSpeed={80}\n                        showCursor={false}\n                      \n                        onComplete={()=>{\n                         \n                          setTagLineDisplay(true)\n                          fadeIn(fadeAnim,5000)\n                        }}\n                    />\n           ):(null)}\n           </View>\n          \n              <Animated.View style={{opacity:fadeAnim}}>\n                \n                    <Text > {tagLineDisplay?(\"React Native developer at the core and much more...\"):null}</Text>\n              \n             \n              </Animated.View>\n           \n        \n           \n          </View>\n        </View>\n    )\n}\nexport default AboutLeft;","import { Animated } from \"react-native\";\n\nexport const fadeIn = (anim,delay) => {\n    // Will change fadeAnim value to 1 in 3 seconds\n    Animated.timing(anim, {\n      toValue: 1,\n      duration: delay?delay: 3000,\n    }).start();\n  };\n\n export const fadeOut = (anim,delay) => {\n    // Will change fadeAnim value to 0 in 3 seconds\n    Animated.timing(anim, {\n      toValue: 0,\n      duration:  delay?delay: 3000,\n    }).start();\n  };","import React, { useState } from 'react';\nimport {View,Text, Image, TouchableOpacity, StyleSheet } from 'react-native';\nimport { FlatList, ScrollView } from 'react-native-gesture-handler';\nimport AboutLeft from '../Components/AboutLeft';\nimport { MAIN_TOOLS, NAV_BAR_DATA } from './DataConstants';\n\nconst Home = (props)=>{\n    \n      const renderTools=({item,index})=>{\n          return(\n              <View key={item.id} style={{alignItems: 'center',justifyContent: 'center',margin:12}}>\n                  <Image\n                  style={{height:80,width:80}}\n                  source={item.image}\n                  />\n                  <Text>{item.name}</Text>\n              </View>\n          )\n      }\n    return(\n        <View style={{flex:1, flexDirection:'row'}}>\n       <View style={{flex:1, alignItems: 'center',justifyContent: 'center',}}>\n       <AboutLeft/>\n       </View>\n       <View style={{flex:1, alignItems: 'center',justifyContent: 'center',}}>\n         <View>\n          <FlatList\n          horizontal\n          data={MAIN_TOOLS}\n          renderItem={renderTools}\n          />   \n         </View>\n       </View>\n        </View>\n    )\n}\nconst styles = StyleSheet.create({\n     \n})\nexport default Home;","import React from 'react';\nimport { View,Text  } from 'react-native';\nimport { Title } from 'react-native-paper';\n\nconst CustomTabHeader  =(props)=>{\n    const title=props.title?props.title:\"None\"\n    return(\n        <View style={{width:'100%',justifyContent:'center'}}>\n               <View \n               style={{height:0.5,\n                position:'absolute',\n\n            backgroundColor:\"#a3a3a3\", width:'80%',alignSelf:'center'}}\n               />\n            <View style={{alignSelf:'center',backgroundColor:'#fff',boxShadow:\"0px 0px 5px #a3a3a3\",width:200,alignItems: 'center',borderRadius:40,zIndex:2}}>\n            <Title>{title}</Title>\n            </View>\n           </View>\n    )\n}\nexport default CustomTabHeader;","import React, { useState } from 'react';\nimport { View,Text, FlatList, TouchableOpacity  } from 'react-native';\nimport { PROJECTS } from './DataConstants';\nimport Typed from 'react-typed';\nimport CustomTabHeader from '../Constant/CustomTabHeader';\nimport { LinearGradient } from 'expo-linear-gradient';\nconst Works = ()=>{\n    const [selectedId,setSelectedId] = useState(\"\")\n\n   \n    const renderProjects=({item,index})=>{\n         \n        return(\n            <TouchableOpacity \nonMouseEnter={()=>setSelectedId(item.title)}\nonMouseLeave={()=>setSelectedId(\"\")}\n            onPress={()=>{window.open(item.url)}}\n            style={{height:250,width:250,margin:24 ,alignItems:'center',justifyContent: 'center',borderRadius:12,padding:12}}>\n                <LinearGradient\n        // Button Linear Gradient\n        colors={item.color}\n        style={ {height:250,width:250,margin:24 ,alignItems:'center',justifyContent: 'center',borderRadius:12,padding:12}}>\n                <Text\n                style={{color:\"#fff\",fontSize:18,fontWeight:'bold',fontFamily:'Roboto',textAlign:'center'}}\n                >{item.title}</Text>\n               {item.title===selectedId&&(\n                    <Typed\n                \n                    style={{fontSize:14, fontFamily:'Roboto',color:'#fff'}}\n                    strings={[item.desc]}\n                    typeSpeed={80}\n                    showCursor={false} \n                    />\n               )}\n      </LinearGradient>\n                \n            </TouchableOpacity>\n        )\n    }\n    return(\n        <View style={{flex:1,alignItems:'center',justifyContent: 'center'  }}>\n           \n           <View style={{flex:1,justifyContent:'center'}}>\n           <View style={{}}>\n           <FlatList\n            contentContainerStyle={{ alignSelf:'center'}}\n            horizontal\n            data={PROJECTS}\n            renderItem={renderProjects}\n            \n            />\n            <Text\n                style={{ fontSize:18,fontWeight:'bold',fontFamily:'Roboto',alignSelf:'center'}}\n                >and more ...</Text>\n           </View>\n           </View>\n            <View>\n            \n            </View>\n        </View>\n    )\n}\nexport default Works;","import React from 'react';\nimport { useState } from 'react';\nimport { View,Text, TouchableOpacity, StyleSheet, Image  } from 'react-native';\nimport { Subheading, Title } from 'react-native-paper';\nimport CustomTabHeader from '../Constant/CustomTabHeader';\n\nconst Blogs = (props)=>{\n    const [hoverItem,setHoverItem] = useState(false)\n    return(\n        <View style={{ flex:1}}>\n            <View style={{alignItems:'center'}}>\n           \n            </View>\n            <View style={{flexDirection:'row',flex:1}}>\n                <View style={{flex:1,alignItems: 'center',justifyContent: 'center',}}>\n               <View>\n               <Image\n               source={require(\"./../assets/blogicon.png\")}\n               style={{width:426,height:330,alignSelf:'center'}}\n               resizeMode=\"contain\"\n               />\n              \n               </View>\n                </View>\n                <View style={{flex:1,alignItems: 'center',justifyContent: 'center',margin:12 }}>\n                \n                <Title >Why and What I write...</Title>\n                <Subheading>I believe in sharing my knowledge with others is <br/>one of the best ways to hone your own skills.\n                \n                </Subheading>\n               \n                <TouchableOpacity\n            onMouseEnter={()=>{setHoverItem(true)}}\n            onMouseLeave={()=>{setHoverItem(false)}}\n            style={[styles.buttonContainer,( hoverItem ) &&styles.selectionIndicator]}\n            onPress={()=>{ props.navigation.navigate(\"BlogIndex\")}}\n            >\n                <Text\n                style={[( hoverItem )&&styles.selectionText]}\n                >{\"View my blogs\"}</Text>\n            </TouchableOpacity>\n                </View>\n            </View>\n\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    selectionIndicator:{\n        \n        backgroundColor:\"#e3e3e3\".replace,\n        borderRadius:4,\n        backgroundColor:'red'\n    },\n    buttonContainer:{\n        \n        padding:12,\n        alignItems: 'center',\n        marginHorizontal:4,\n        borderColor:\"red\",\n        borderWidth:1,\n        borderRadius:4\n    },\n    selectionText:{\n        fontWeight:\"bold\",\n        color:\"#fff\"\n    },\n})\nexport default Blogs;","import React from 'react';\nimport { useState } from 'react';\nimport { View, Text, TextInput, TouchableOpacity,  } from 'react-native';\nimport { Title } from 'react-native-paper';\n\nconst BlogHeader = ()=>{\n    \n    return (\n        <View style={{backgroundColor:\"#F7BF50\"}}>\n            <View style={{flexDirection:'row',justifyContent:'space-between',padding:4}}>\n             \n            <Title style={{fontWeight:\"bold\"}}>VS BLOGS </Title>\n            <View style={{ justifyContent: 'center', }}>\n                <Text>Follow me on:</Text>\n            </View>\n           \n        </View>\n        {/* <View style={{padding:12 }}>\n            <Text>Easy filter</Text>\n        </View> */}\n        </View>\n    )\n}\n\nexport default BlogHeader;","import React from 'react';\nimport {View,Text, Image} from 'react-native';  \nimport { useMediaQuery } from 'react-native-media-query';\nimport { BLOGDATA } from '../Constant/TextConstants';\n\nconst AboutContact= ()=>{\n \n  const styles1 = {\n    container:{\n          '@media (max-width: 600px)': {\n              flexDirection:'column'\n          },\n      },\n      carousel: {\n          '@media (max-width: 600px)': {\n           \n        },\n      }\n    }\n  \n    \n    const [ids, styles] = useMediaQuery(styles1);\n    return(\n      <View style={{flex:1 }}>\n          {/* <View style={{position:'absolute'}}>\n            <Text>HELLO</Text>\n          </View>\n          <View\n          style={{borderWidth:0.001,borderColor:'grey'}}/> */}\n         \n            <View style={{flexDirection:'row',flex:1}}>\n              \n              <View style={[{justifyContent:'center',alignItems:'center',flex:1}]}>\n           \n           <Image\n           style={{height:300,width:294 ,borderRadius:150}}\n           source={require(\"./../assets/pp.jpg\")}\n           />\n           <View style={{alignItems:'center',width:\"100%\",maxWidth:350,padding:12,justifyContent:'center',marginHorizontal:24}}>\n                \n                 <Text style={{fontFamily:'Roboto',textAlign:'justify'}}>{BLOGDATA}</Text>\n             </View>\n       </View>\n               \n             \n            </View>\n      </View>\n    )\n}\nexport default AboutContact;","import React, { useEffect, useState } from \"react\";\nimport { View, Text, TextInput, TouchableOpacity } from \"react-native\";\nimport axios from \"axios\";\nimport { Title } from \"react-native-paper\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\nconst ContactForm = () => {\n  //     const ADD_SKILL = gql`\n  // mutation addSkill($id:String!, $name:String!, $level:Float!, $type:String!) {\n  //   addSkill(id:$id, name:$name, level:$level, type:$type) {\n  //     status\n  //     id\n  //     name\n  //     level\n  //     type\n  //   }\n  // }\n  // `\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [comment, setComment] = useState(\"\");\n  const [submitButtobHover, setsubmitButtobHover] = useState(false);\n  const sendMail = () => {\n    if (name.length > 0 && email.length > 0 && comment.length > 0) {\n      console.log(\"Hitting loalhost axios !\");\n    \n    axios.post(\"http://localhost:1337/vs-contacts\",{\n        name: name,\n        email: email,\n        phone:phone,\n        message: comment, \n    }).then(()=>{\n        axios\n        .post(\"https://secret-island-95358.herokuapp.com/contact\", {\n          name: name,\n          email: email,\n          comment: \"You have a new contact request\",\n        })\n        .then((res) => console.log(\"response is\", res))\n        .catch((err) => console.log(\"error is\", err));\n    })\n    }\n    // axios.post('http://localhost:8080/contact', {\n\n    //   firstName: 'Finn',\n    //   lastName: 'Williams'\n\n    // }).then(res=>console.log(\"response is\",res))\n    // .catch(err => console.log(\"error is\",err))\n    //   }\n  };\n  return (\n    <View style={{ flex: 1, justifyContent: \"center\" }}>\n      <View>\n        <View\n          style={{\n            flex: 1,\n            alignItems: \"center\",\n            backgroundColor: \"#fff\",\n            alignSelf: \"center\",\n            borderRadius: 12,\n            minWidth: 400,\n            padding:12,\n            boxShadow:\"2px 2px 5px #e2e2e2\"\n          }}\n        >\n          \n            <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n              <Title>Wanna get in touch?</Title>\n            </View>\n            <TextInput\n              onChangeText={setName}\n              placeholder={\"Enter name\"}\n              style={{\n                outline:\"none\",\n                backgroundColor:\"#fff\",\n                height: 40,\n                justifyContent: \"center\",\n                borderWidth: 1,\n                maxWidth: 315,\n                marginVertical: 12,\n                width: \"100%\",\n                borderRadius: 8,\n                borderColor: \"grey\",\n                fontFamily: \"Roboto\",\n                paddingLeft: 4,\n              }}\n            />\n            <TextInput\n              onChangeText={setEmail}\n              placeholder={\"Enter email\"}\n              style={{\n                outline:\"none\",\n                backgroundColor:\"#fff\",\n                height: 40,\n                justifyContent: \"center\",\n                borderWidth: 1,\n                maxWidth: 315,\n                marginVertical: 12,\n                width: \"100%\",\n                borderRadius: 8,\n                borderColor: \"grey\",\n                fontFamily: \"Roboto\",\n                paddingLeft: 4,\n              }}\n            />\n            <TextInput\n              onChangeText={setPhone}\n              placeholder={\"Enter phone\"}\n              style={{\n                outline:\"none\",\n                backgroundColor:\"#fff\",\n                height: 40,\n                borderWidth: 1,\n                maxWidth: 315,\n                marginVertical: 12,\n                width: \"100%\",\n                borderRadius: 8,\n                borderColor: \"grey\",\n                fontFamily: \"Roboto\",\n                paddingLeft: 4,\n              }}\n            />\n            <TextInput\n              onChangeText={setComment}\n              placeholder={\"Enter comment\"}\n              multiline={true}\n              numberOfLines={4}\n              style={{\n                outline:\"none\",\n                  backgroundColor:\"#fff\",\n                height: 120,\n                textAlignVertical: \"top\",\n                borderWidth: 1,\n                maxWidth: 315,\n                marginVertical: 12,\n                width: \"100%\",\n                borderRadius: 8,\n                borderColor: \"grey\",\n                fontFamily: \"Roboto\",\n                paddingLeft: 4,\n                padding: 10,\n              }}\n            />\n            <TouchableOpacity\n              onMouseEnter={() => {\n                setsubmitButtobHover(true);\n              }}\n              onMouseLeave={() => {\n                setsubmitButtobHover(false);\n              }}\n              style={[\n                {\n                 \n                  height: 40,\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  textAlignVertical: \"top\",\n                  borderWidth: 1,\n                  maxWidth: 315,\n                  marginVertical: 12,\n                  width: \"100%\",\n                  borderRadius: 8,\n                  borderColor: \"red\",\n                  fontFamily: \"Roboto\",\n                  paddingLeft: 4,\n                },\n                submitButtobHover&&{ backgroundColor: \"red\" },\n              ]}\n              onPress={() => {\n                sendMail();\n              }}\n            >\n              <Text\n                style={[\n                  { fontWeight: \"bold\", color: \"#2e2e2e\" },\n                 submitButtobHover&& { color: \"#fff\" },\n                ]}\n              >\n                Submit\n              </Text>\n            </TouchableOpacity>\n           \n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default ContactForm;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { View, Text, ScrollView, FlatList, Image, StyleSheet } from \"react-native\"; \nimport { NAV_BAR_DATA } from \"../../UI/DataConstants\";\nimport Header from \"../../UI/Header\";\nimport Home from \"./../../UI/Home\";\nimport { useWindowDimensions } from \"react-native\";\nimport Works from \"../../UI/Works\";\nimport Blogs from \"../../UI/Blogs\";\nimport BlogHeader from \"../../Blog/BlogHeader\";\nimport CustomTabHeader from \"../../Constant/CustomTabHeader\";\nimport AboutMe from \"../AboutMe/AboutMe\";\nimport AboutContact from \"../../UI/AboutContact\";\nimport ContactForm from \"../../UI/ContactForm\";\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nconst Index = (props) => {\n  const [selectedNavitem, setSelectedNavItem] = useState(NAV_BAR_DATA[0].id);\n  const windowHeight = useWindowDimensions().height;\n  const inputEl = useRef(null);\n   \n  const scrollRef = useRef(null);\n  const [bodyHeight, setBodyHeight] = useState(0);\n  useEffect(() => {\n    if (inputEl.current) {\n      inputEl.current.measure((fx, fy, width, height, px, py) => {\n        setBodyHeight(height);\n        console.log(\"height:\", height);\n      });\n    }\n  }, [inputEl]);\n  const renderBodyItems = ({ item, index }) => {\n    switch (item.id) {\n      case \"0\":\n        return (\n          <View style={{ height: windowHeight }}>\n            <Home />\n          </View>\n        );\n      case \"1\":\n        return (\n          <View style={{ height: windowHeight }}>\n            <CustomTabHeader title=\"Works\" />\n            <Works />\n          </View>\n        );\n      case \"2\":\n        return (\n          <View style={{ height: windowHeight }}>\n            <CustomTabHeader title=\"Blogs\" />\n            <Blogs navigation={props.navigation} />\n          </View>\n        );\n      case \"3\":\n        return (\n          <View style={{ height: windowHeight }}>\n            <CustomTabHeader title=\"About\" />\n            <AboutContact navigation={props.navigation} />\n          </View>\n        );\n        case \"4\":\n            return (\n              <View style={{ height: windowHeight }}>\n                <CustomTabHeader title=\"Contact\" />\n                <ContactForm navigation={props.navigation} />\n              </View>\n            );\n    }\n  };\n  const navBarSelection = (id)=>{\n    setSelectedNavItem(id)\n    scrollRef.current.scrollToIndex({\n        index: parseInt(id),\n        viewOffset:10\n    })\n  }\n  const HandleScroll = (event)=>{ \n    setSelectedNavItem((Math.round(event.nativeEvent.contentOffset.y/bodyHeight)).toString())\n   }\n   const iconCLick=(ele)=>{\n     console.log(\"THis \",ele)\n   }\n  const listFooterComponent=()=>{\n    return (\n       <View style={{ backgroundColor:\"#2e2e2e\", alignItems: 'center',padding:40}}>\n          <Image\n          source={require(\"./../../assets/vs.png\")}\n          style={{height:60,width:60,borderRadius:8}}\n          />\n          <View style={{flexDirection:'row',padding:12}}>\n          <MaterialCommunityIcons\n          onPress={()=>iconCLick(\"insta\")}\n          style={[styles.icon]} name=\"instagram\" size={24} color=\"#C13584\" />\n          <MaterialCommunityIcons style={[styles.icon]} name=\"facebook\" size={24} color=\"#3B5998\" />\n          <MaterialCommunityIcons style={[styles.icon]} name=\"twitter\" size={24} color=\"#1DA1F2\" />\n          <MaterialCommunityIcons style={[styles.icon]} name=\"github\" size={24} color=\"#4078c0\" />\n          <MaterialCommunityIcons style={[styles.icon]} name=\"linkedin\" size={24} color=\" #0e76a8\" />\n          </View>\n       </View>\n    )\n  }\n  return (\n    <View style={{ flex: 1 }}>\n      <Header\n        selectedNavitem={selectedNavitem}\n        setSelectedNavItem={navBarSelection}\n      />\n\n      <View ref={inputEl} style={{ flex: 1 }}>\n        <View style={{ height: bodyHeight }}>\n          <FlatList\n          showsVerticalScrollIndicator={false}\n          onScroll={HandleScroll}\n          ref={scrollRef} data={NAV_BAR_DATA} renderItem={renderBodyItems}\n          ListFooterComponent={listFooterComponent}\n          />\n        </View>\n        \n      </View>\n    </View>\n  );\n};\nconst styles = StyleSheet.create({\n  icon:{\n      marginHorizontal:6\n  }\n})\nexport default Index;\n","import {\n    ApolloClient,\n    InMemoryCache,\n    \n  } from \"@apollo/client\";\n  export const client = new ApolloClient({\n    uri: 'http://localhost:1337/graphql',\n    cache: new InMemoryCache(\n        {\n            typePolicies:{\n\n                Query:{\n                   fields:{\n                       vsBlogs:{\n                        keyArgs: false,\n                        // Concatenate the incoming list items with\n                        // the existing list items.\n                        merge(existing = [], incoming) {  \n                          return [...existing, ...incoming];\n                        },\n                       }\n                   }\n              }\n            }\n        }\n    )\n  });","import { gql } from \"@apollo/client\";\n\nexport const BLOG_QUERY_MAIN = gql`\nquery($limit:Int, $offset:Int,$filter_word:String,$category:[ENUM_VSBLOGS_CATEGORY] ){\n  vsBlogs(\n     start:$offset,\n    limit:$limit,\n    sort:\"created_at:DESC\",\n    where:{_or:[{title_contains:$filter_word },{category:$category},  {vs_author:{  name_contains:$filter_word}}] }\n  ){\n    id\n    title\n    coverimage\n    created_at\n    author\n    rating\n    category\n    vs_author{\n      id\n      name\n      \n    }\n  }\n}\n`\nexport const GET_SINGLE_BLOG = gql`\nquery($blog_id:ID!){\n  vsBlog(id:$blog_id){\n    id\n    title\n    author\n    post\n    created_at\n    rating\n    upvotes\n    downvotes\n    vs_author{\n      id\n      name\n      \n    }\n  }\n}\n`","const secret_key_encryption = \"'XD=8y9%%g)gn}irFC5l2!]>G5[c8|\";\nvar CryptoJS = require(\"crypto-js\");\nexport const encryption = (id) => {\n  var ciphertext = CryptoJS.AES.encrypt(id, secret_key_encryption).toString();\n  return ciphertext;\n};\nexport const decryption = (ciphertext) => {\n  var bytes = CryptoJS.AES.decrypt(ciphertext, secret_key_encryption);\n  var originalText = bytes.toString(CryptoJS.enc.Utf8);\n  return originalText;\n};\n","import { useQuery } from \"@apollo/client\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { FlatGrid } from \"react-native-super-grid\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  FlatList,\n  ActivityIndicator,\n  Image,\n  TextInput,\n} from \"react-native\";\nimport { client } from \"../ApolloProvider/ApolloClient\";\nimport BlogHeader from \"./BlogHeader\";\nimport { BLOG_QUERY_MAIN } from \"./Queries\";\nimport { useEffect } from \"react\";\nimport { encryption } from \"../Constant/utility\";\nimport { Caption, Checkbox, Modal, Title } from \"react-native-paper\";\nimport date from \"date-and-time\";\nconst BlogIndex = (props) => {\n  const [visible, setVisible] = React.useState(false);\n\n  const showModal = () => setVisible(true);\n  const hideModal = () => setVisible(false);\n  const containerStyle = {\n    backgroundColor: \"white\",\n    padding: 20,\n    width: \"60%\",\n    alignSelf: \"center\",\n  };\n  const [blogname, setBlogname] = useState(\"\");\n  useEffect(() => {\n    console.log(\"Blog inedex props\", props);\n    return () => {\n      \n    };\n  });\n  \n  const [limit, setLimit] = useState(6);\n  const [offset, setOffset] = useState(0);\n  const [loadFooter, setLoadFooter] = useState(0);\n  const [categories, setCategories] = useState([]);\n  const [extraData, setExtraData] = useState(false);\n  const { data, error, loading, fetchMore, refetch } = useQuery(\n    BLOG_QUERY_MAIN,\n    {\n      variables: {\n        limit: limit,\n        offset: offset,\n        filter_word: blogname,\n        category: categories,\n      },\n    }\n  );\n  if (data) {\n    console.log(\"data\", data);\n    console.log(\"client1\", client);\n  }\n  if (loading) {\n    console.log(\"Loading\", loading);\n  }\n  if(error){\n      console.log(\"Error \",error)\n  }\n  const renderBlogs = ({ item, index }) => {\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          props.navigation.navigate(\"BlogPost\", {\n            id: item.id,\n          });\n        }}\n        style={{\n          boxShadow: \"0px 0px 5px #757575\",\n\n          shadowColor: \"black\",\n          shadowOpacity: 0.4,\n          margin: 12,\n          alignItems: \"center\",\n          padding: 12,\n          borderRadius: 4,\n        }}\n      >\n        <Image\n          style={{ height: 120, width: \"100%\" }}\n          source={item.coverimage}\n        />\n        <View style={{ width: \"100%\" }}>\n          <Title numberOfLines={1}>{item.title}</Title>\n          <View>\n            <Caption>{item.vs_author.name}</Caption>\n            <Caption>\n              {date.format(new Date(item.created_at), \"ddd MMM DD YYYY\")}\n            </Caption>\n          </View>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n  const searchFunction = (val) => {\n    setBlogname(val);\n    console.log(\"val\", val);\n\n    refetch({\n      limit: 6,\n      offset: 0,\n      filter_word: val,\n    });\n  };\n  const checkBoxValidation=(val)=>{\n      //Add to array if checkbox value is not in array and vice versa\n      console.log(\"Val \",categories,categories.indexOf(val))\n      if(categories.indexOf(val)>=0){\n          //remove category from array\n            let temp = categories;\n            temp.splice(temp.indexOf(val), 1);\n            console.log(\"temp -s\",temp)\n            setCategories(\"temp\")\n            setCategories([...temp])\n          \n      }else{\n          \n          setCategories([...categories,val])\n          \n      }\n  }\nuseEffect(()=>{\n    console.log(\"categories \",categories)\n},[categories])\n  const listFooterComponent = () => {\n    if (loadFooter) {\n      return <ActivityIndicator />;\n    } else {\n      if (data.vsBlogs.length == 0) {\n        return <Text>No more blogs</Text>;\n      } else {\n        return (\n          <TouchableOpacity\n            style={{ alignSelf: \"center\" }}\n            onPress={() => {\n              let off_set = offset + 6;\n              setOffset(off_set);\n              setLoadFooter(true);\n              fetchMore({\n                variables: {\n                  limit: limit,\n                  offset: off_set,\n                },\n              }).then((res) => {\n                setLoadFooter(false);\n                console.log(\"client res\", data);\n              });\n            }}\n          >\n            <Text>Fetch More</Text>\n          </TouchableOpacity>\n        );\n      }\n    }\n  };\n  return (\n    <View style={{ flex: 1, flexDirection: \"row\", backgroundColor: \"#e2e2e2\" }}>\n      <View style={{ flex: 1 }}></View>\n      <View style={{ flex: 3, backgroundColor: \"#fff\" }}>\n        <BlogHeader />\n        <View style={{ flex: 1, flexDirection: \"row\" }}>\n          <View style={{ flex: 3 }}>\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignSelf: \"flex-end\",\n                padding: 12,\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                <TextInput\n                  style={{\n                    boxShadow: \"0px 0px 2px #242424\",\n                    borderColor: \"#121212\",\n                    borderRadius: 4,\n                    padding: 4,\n                  }}\n                  placeholder={\"Enter blog name or author...\"}\n                  value={blogname}\n                  onChangeText={searchFunction}\n                />\n                <TouchableOpacity\n                  onPress={() => {\n                    showModal();\n                  }}\n                  style={{\n                    boxShadow: \"0px 0px 2px #242424\",\n                    backgroundColor: \"#f2f2f2\",\n                    padding: 8,\n                    borderRadius: 4,\n                    marginHorizontal: 4,\n                  }}\n                >\n                  <Text style={{ color: \"#000\" }}>Category</Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n            {data && (\n              <FlatGrid\n                itemDimension={200}\n                extraData={extraData}\n                data={data.vsBlogs}\n                renderItem={renderBlogs}\n                ListFooterComponent={listFooterComponent}\n              />\n            )}\n          </View>\n        </View>\n        <Modal\n          visible={visible}\n          onDismiss={hideModal}\n          contentContainerStyle={containerStyle}\n        >\n          <View style={{flexDirection:'row',alignItems: 'center',}}>\n            <Checkbox \n            status={categories.indexOf(\"it\")>=0 ? 'checked' : 'unchecked'}\n              value={\"it\"}\n              onPress={()=>checkBoxValidation(\"it\")}\n            />\n            <Text>IT</Text>\n          </View>\n          <View style={{flexDirection:'row',alignItems: 'center',}}>\n            <Checkbox \n            status={categories.indexOf(\"programming\")>=0 ? 'checked' : 'unchecked'}\n              value={\"programming\"}\n              onPress={()=>checkBoxValidation(\"programming\")}\n            />\n            <Text>Programming</Text>\n          </View>\n          <View style={{flexDirection:'row',alignItems: 'center',}}>\n            <Checkbox \n            status={categories.indexOf(\"general\")>=0 ? 'checked' : 'unchecked'}\n              value={\"general\"}\n              onPress={()=>checkBoxValidation(\"general\")}\n            />\n            <Text>General</Text>\n          </View>\n        </Modal>\n      </View>\n      <View style={{ flex: 1 }}></View>\n    </View>\n  );\n};\nexport default BlogIndex;\n","import { useQuery } from '@apollo/client';\nimport React from 'react';\nimport { View,Text, ScrollView, ActivityIndicator } from 'react-native';\nimport { GET_SINGLE_BLOG } from './Queries';\nimport Markdown from 'react-native-markdown-display';\nimport date from 'date-and-time';\nimport { decryption } from '../Constant/utility';\nimport { Caption, Divider, Paragraph, Title } from 'react-native-paper';\nconst BlogPost = (props)=>{\n    console.log(\"Props.navigation:\",props.route.params,window.location.href)\n    const blog_id =  props.route.params.id \n    console.log(\"Blog is after decryption is \",props.route.params.id,blog_id)\n    const {data,error,loading} = useQuery(GET_SINGLE_BLOG,{\n        variables:{\n            blog_id:blog_id\n        }\n    })\n    if(data){\n        console.log(\"Data\",data)\n    }\n    return (\n        <View style={{flex:2,flexDirection:'row'}}>\n            <View style={{flex:2}}>\n              \n              </View>\n           <View style={{ flex:4,backgroundColor:'#fff'}}>\n            \n          <View style={{flexDirection:'row',justifyContent:'space-between' ,padding:12,backgroundColor:\"#F7BF50\"}}> \n          <Title>VS BLOGS</Title>\n          \n          </View>\n          <Divider  />\n           {data&&(\n               <ScrollView\n               contentContainerStyle={{ padding:12}}\n               contentInsetAdjustmentBehavior=\"automatic\"\n               style={{height: '100%'}}\n             >\n                 <Title>{data.vsBlog.title}</Title>\n                 <View >\n                     <Paragraph>{data.vsBlog.vs_author.name},</Paragraph>\n                     <Caption>{date.format(new Date(data.vsBlog.created_at), 'ddd MMM DD YYYY')}</Caption>\n                 </View>\n               <Markdown\n               style={markdownStyles}\n               >\n                  {data.vsBlog.post}\n               </Markdown>\n               <Divider  />\n               <View style={{flexDirection:'row'}}>\n                   <View style={{flex:1}}>\n                   <Text>Rate this article</Text>\n                   </View>\n                   <View style={{flexDirection:'row',alignItems: 'center',}}>\n                   <Text>Upvotes:{data.vsBlog.upvotes} || </Text>\n                   <Text>Downvotes:{data.vsBlog.downvotes}</Text>\n                   </View>\n               </View>\n             </ScrollView>\n           )}\n           {loading&&(\n               <ActivityIndicator/>\n           )}\n           <View>\n\n           </View>\n           </View>\n           <View style={{flex:2}}>\n              \n            </View>\n            \n        </View>\n    )\n}\nconst markdownStyles = {\n    heading1: {\n      fontSize: 24,\n      color: 'purple',\n    },\n    link: {\n      color: 'pink',\n    },\n    mailTo: {\n      color: 'orange',\n    },\n    text: {\n        \n      fontSize:16,\n      color: '#151515',\n      fontFamily:\"roboto\"\n    },\n  };\nexport default BlogPost;","import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useRef, useState } from 'react';\nimport {  StyleSheet, Text, TouchableOpacity, View } from 'react-native'; \nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Tools from './Components/Screens/Tools'; \nimport Index from './Components/MainStack/Index';\nimport BlogIndex from './Blog/BlogIndex';\nimport { ApolloProvider } from '@apollo/client';\nimport { client } from './ApolloProvider/ApolloClient';\nimport BlogPost from './Blog/BlogPost';\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport AppLoading from 'expo-app-loading';\nimport { useFonts } from 'expo-font';\nconst Stack = createStackNavigator();\nexport default function App() { \n \n  const config = {\n    screens: {\n      MainScreen: '',\n      BlogIndex:'/blog',\n      BlogPost:'/blog/post/:id',\n      Tools: '/skills',\n      PrivacyPolicy: '/privacypolicy',\n      NotFound: '*',\n    },\n  };\n  const state = {\n   \n        state: {\n          routes: [\n            {\n              name: 'BlogIndex',\n              \n              \n            },\n            {\n              name:'MainScreen'\n            }\n          ],\n        },\n       \n  };\n  const linking = {\n    prefixes: ['https://vinays.dev', 'vinays.dev://','http:localhost:19006'],\n    config,\n   state\n  };\n\n  let [fontsLoaded] = useFonts({\n    'roboto': require('./assets/fonts/Roboto-Regular.ttf'),\n  });\n\n  if (!fontsLoaded) {\n    return <AppLoading />;\n  }else{\n\n\n  return (\n    <ApolloProvider client={client}>\n       <PaperProvider>\n     <NavigationContainer linking={linking}  fallback={<Text>Loading...</Text>}>\n      <Stack.Navigator\n      screenOptions={\n        {\n          headerShown:false\n        }\n      }>\n       \n        <Stack.Screen name=\"MainScreen\" component={Index} options={{title:\"Home\"}}/>\n        <Stack.Screen name=\"BlogIndex\" component={BlogIndex}/>\n        <Stack.Screen name=\"BlogPost\" component = {BlogPost}/> \n      </Stack.Navigator>\n    </NavigationContainer>\n    </PaperProvider>\n    </ApolloProvider>\n     \n    \n  );  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n   \n   \n  },\n  header:{\n    \n    \n    backgroundColor: '#fff',\n    alignItems:'center',\n    elevation:2,\n   \n    shadowColor: 'black',\n    shadowOpacity:0.2,\n            shadowRadius:8,\n            padding:12\n  },\n  navbar:{\n    flexDirection:'row',\n   \n   \n   \n\n  },\n  navitem:{\n     paddingHorizontal:12,\n    \n  },\n  navitemActive:{\n    borderBottomWidth:1,borderColor:'red'\n  },\n  navText:{\n   fontSize:16,\n   fontWeight:'300',\n   fontFamily:\"Roboto\"\n  },\n  body:{\n   flex:1,\n  \n  }\n});\n","module.exports = __webpack_public_path__ + \"static/media/apollo.8464b06a.png\";","module.exports = __webpack_public_path__ + \"static/media/strapi.1758cefe.png\";","module.exports = __webpack_public_path__ + \"static/media/graphql.a9e74a7e.png\";","module.exports = __webpack_public_path__ + \"static/media/blogicon.474c0618.png\";","module.exports = __webpack_public_path__ + \"static/media/pp.01ba2f0c.jpg\";","module.exports = __webpack_public_path__ + \"./fonts/Roboto-Regular.ttf\";"],"sourceRoot":""}